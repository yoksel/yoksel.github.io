{"pageProps":{"article":{"title":"Логотип не отвечает или временно недоступен","slug":"a11y-for-logotypes","content":"<p>Заинтересовалась вопросом: как лучше всего верстать логотипы на сайте? Как правильно и почему? Картинкой или фоном? Как логотип будет выглядеть при печати? Как обеспечить доступность для скринридеров и как сделать подсказки для поисковиков? </p>\n<p>Спасибо всем участникам <a href=\"https://twitter.com/yoksel/status/809086523891154944\">дискуссии</a> за полезные комментарии : ) Я сделала несколько вариантов разметки, провела ряд тестов и узнала много интересного.</p>\n<p>Есть разные способы вставить логотип на страницу:</p>\n<ul>\n<li>фоновой картинкой (обычно на элементе заголовка)</li>\n<li>обычной картинкой</li>\n<li>инлайновым SVG</li>\n</ul>\n<p>Мне больше всего нравится вариант с фоновым изображением, заданным для H1. Почему именно этот? Потому что логотип обычно содержит название компании или сайта, и это название логично сделать главным заголовком на странице. Зачастую логотип — это просто красиво оформленное название, поэтому можно написать название текстом, а потом с помощью стилей оформления скрыть его и вместо него показать картинку. Помимо доступности текста для скринридеров, такой вариант разметки позволяет без проблем добавить какие-нибудь эффекты по наведению (например, менять картинку).</p>\n<p>Вроде бы отличный способ, но нет. Логотип в этом случае невозможно скопировать или сохранить, а если пользователь просматривает страницу без картинок, вместо логотипа он увидит пустое место, то есть заголовок сайта окажется для него недоступен.</p>\n<p>И тут возникает вопрос доступности. Что такое доступность? Для кого должен быть доступен логотип сайта? Обычно под доступностью подразумевается доступность веб-контента для людей с ограниченными возможностями, но я предлагаю посмотреть на вопрос немного шире, и подумать над доступностью логотипа:</p>\n<ul>\n<li>при плохом соединении с интернетом, когда на странице может не быть стилей или картинок;</li>\n<li>при печати страницы;</li>\n<li>для копирования;</li>\n<li>для поисковиков;</li>\n<li>для манипуляций с помощью CSS.</li>\n</ul>\n<p>Мы привыкли к хорошему интернету, который есть практически везде, и можем думать, что так у всех, пока нам внезапно не потребуется срочно открыть какую-то страницу находясь в метро или, например, в отпуске, в отеле с полудохлым вайфаем. Если вы бывали в такой ситуации, наверняка отвалившиеся стили или недогрузившиеся картинки из разряда редких мифических существ для вас резко перешли в разряд острых насущных проблем. «Да кто вообще делал этот тормозной сайт?!». В общем, стили могли не доехать, а картинки могли быть отключены пользователем для экономии трафика и ускорения загрузки страниц. Такое случается.</p>\n<p>С печатью всё более-менее понятно: иногда люди печатают страницы, и логотип при этом не должен превращаться в тыкву, особенно если одновременно он является названием сайта.</p>\n<p>Вопрос копирования актуален для контент-менеджеров, которым может понадобиться скопировать логотип с сайта компании. Если на сайте раздобыть не получится, можно прибегнуть к помощи поисковиков. Смогут ли поисковые роботы найти на странице ваш логотип?</p>\n<p>Доступность для CSS может быть актуальным вопросом для разработчиков. Как сделать доступный и интерактивный логотип одновременно?</p>\n<p>Ниже мы рассмотрим все способы сделать логотип и проверим как у них с доступностью в широком смысле этого слова.</p>\n<p><i>Для тестов в MacOS использовался VoiceOver (встроенный скринридер) и браузеры Chrome, Firefox и Safari. На Windows 7 использовала <a href=\"http://www.nvaccess.org/\">NVDA</a> и браузеры Chrome, Firefox и IE10.</i></p>\n<h2 id=bg><a href=\"#bg\">Логотип фоном</a></h2>\n\n<p>Пример разметки:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Название сайта<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n</code></pre></figure>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.logo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* задаём размеры */</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* прячем текст */</span>\n  <span class=\"token property\">text-indent</span><span class=\"token punctuation\">:</span> -1000px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* задаём фоном картинку с логотипом */</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>logo.png<span class=\"token punctuation\">)</span></span> 50% 50% no-repeat<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></figure>\n<p>Текст можно прятать разными способами: помимо <code>text-indent</code> иногда используют <code>font-size: 0</code>. Интересно, что в обоих случаях текст остаётся доступным для скринридеров, хотя и с некоторыми оговорками. Текст будет прочитан, но при этом скринридер не сможет корректно выделить элемент, который он читает в данный момент.</p>\n<p>Обычно VoiceOver выделяет читаемый элемент заметной чёрной рамкой:</p>\n<img src=\"../assets/img/articles/ally-for-logo/logo-outline.png\" alt=\"VoiceOver показывает читаемый элемент\">\n\n<p>С этими способами, в зависимости от браузера, рамки может не быть вообще, или она будет указывать на другой элемент.</p>\n<p>Это легко исправить, если добавить элементу с логотипом <code>role=\"img\"</code>. Правда, в этом случае скринридер начнёт читать его как картинку без <code>alt</code> — текст внутри окажется недоступен. Чтобы решить эту проблему, элементу нужно добавить <code>aria-label</code>, который содержит название сайта.</p>\n<p>Итоговая разметка будет выглядеть как-то так:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span>\n  <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Название сайта<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span>Название сайта<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n</code></pre></figure>\n<p>Ещё можно скрывать текст с помощью <code>.visuallyhidden</code> (<a href=\"https://allyjs.io/tutorials/hiding-elements.html#how-to-hide-elements-visually\">про него можно почитать тут</a>). В этом случае для обеспечения доступности не нужны вспомогательные атрибуты, но для текста потребуется дополнительная обёртка с классом <code>.visuallyhidden</code>:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visuallyhidden<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Название сайта<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n</code></pre></figure>\n<p>В этом случае VoiceOver также выделит элемент чёрной рамкой, но по форме и размеру она будет соответствовать скрытому тексту:</p>\n<img src=\"../assets/img/articles/ally-for-logo/logo-outline--vis-hidden.png\" alt=\"VoiceOver показывает читаемый элемент\">\n\n<p>VoiceOver во всех браузерах ведёт себя более-менее одинаково: чтобы он корректно воспринимал элемент, ему достаточно задать <code>role</code> с <code>aria-label</code> или использовать <code>.visuallyhidden</code>.</p>\n<p>В NVDA на Windows всё не так радужно:</p>\n<ul>\n<li>в Chrome вообще не читается элемент с <code>.visuallyhidden</code></li>\n<li>в Firefox у элемента с <code>.visuallyhidden</code> обрезается текст</li>\n</ul>\n<p>Интересно, что при этом в IE10 прочитался вообще весь возможный текст, игнорируя даже <code>role=\"img\"</code>.</p>\n<h3>Доступность: 3/6</h3>\n\n<ul class=\"ally-list\">\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">без стилей</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--no\">\n   <span class=\"ally-list__text\">без картинок</span>\n   <span class=\"ally-list__text\">нет</span>\n </li>\n <li class=\"ally-list__item ally-list__item--bad\">\n   <span class=\"ally-list__text\">для печати</span>\n  <span class=\"ally-list__text\">плохо</span>\n </li>\n <li class=\"ally-list__item ally-list__item--no\">\n   <span class=\"ally-list__text\">для копирования</span>\n   <span class=\"ally-list__text\">нет</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">для скринридеров</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n     <span class=\"ally-list__text\">эффекты по наведению</span>\n     <span class=\"ally-list__text\">да</span>\n </li>\n</ul>\n\n<p>Без картинок на странице вместо логотипа будет пустое место. Сохранить как картинку такой логотип не получится, если только продвинутый пользователь не воспользуется веб-инспектором.</p>\n<p>По умолчанию фоны, заданные в стилях, не печатаются. Печать фоновых изображений можно включить в параметрах печати, но если пользователь не сделает это руками, вместо логотипа опять-таки будет пустое место.</p>\n<p>Проблему можно решить разделением стилей для печатной и для экранной версий: для этого можно использовать <code>@media screen</code> (стили только для экранов) и <code>@media print</code> (стили для печатной версии). Таким образом, печать логотипа не будет проблемой, если позаботиться об этом заранее.</p>\n<p>На самом деле, при таком способе не обязательно скрывать текст — он может быть частью логотипа, как это сделано на <a href=\"http://lea.verou.me/\">сайте Лии Веру</a>:</p>\n<img src=\"../assets/img/articles/ally-for-logo/lea-verou-me.png\" alt=\"Лого на сайте Лии Веру\">\n\n<p>и на сайте <a href=\"http://html5doctor.com/\">HTML5 Doctor</a>:</p>\n<img src=\"../assets/img/articles/ally-for-logo/html5doctor-com.png\" alt=\"Лого на сайте HTML5 Doctor\">\n\n<p><i>Можно спорить являются ли эти примеры логотипами либо это логотип + заголовок страницы, но по-моему, в данных случаях пары картинка + текст воспринимаются как одно целое, поэтому я бы считала их логотипами.</i></p>\n<h3>Доступность: 5/6</h3>\n\n<ul class=\"ally-list\">\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">без стилей</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">без картинок</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">для печати</span>\n  <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--no\">\n   <span class=\"ally-list__text\">для копирования</span>\n   <span class=\"ally-list__text\">нет</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">для скринридеров</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n     <span class=\"ally-list__text\">эффекты по наведению</span>\n     <span class=\"ally-list__text\">да</span>\n </li>\n</ul>\n\n<p>Логотип всё ещё нельзя скопировать, но с остальным проблем не будет: при отключенных картинках и при печати пользователь хотя бы увидит текст.</p>\n<p>Правда, есть один нюанс: если текст белый, при печати страницы с настройками по умолчанию он может получиться белым на белом, так что в этом случае о стилях для печати также нужно позаботиться заранее.</p>\n<h2 id=img><a href=\"#img\">Логотип картинкой</a></h2>\n\n<p>Пример разметки:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Название сайта<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n</code></pre></figure>\n<h3>Доступность: 5/6</h3>\n\n<ul class=\"ally-list\">\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">без стилей</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">без картинок</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">для печати</span>\n  <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">для копирования</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">для скринридеров</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--no\">\n     <span class=\"ally-list__text\">эффекты по наведению</span>\n     <span class=\"ally-list__text\">нет</span>\n </li>\n</ul>\n\n<p>В этом варианте при незагрузившихся картинках отобразится содержимое атрибута <code>alt</code>. Возможно, это будет не очень красиво выглядеть, но текст всё ещё можно будет прочитать.</p>\n<p>Преимущество этого способа в том, что он не сломается при отсутствии стилей и при печати, логотип легко можно сохранить со страницы, и всё это без каких-либо усилий с вашей стороны.</p>\n<p>Недостаток — недоступность содержимого для CSS, если нужно менять картинку по наведению или добавить CSS-анимации.</p>\n<p>Например, если это SVG-изображение, при инлайновом SVG можно было бы менять цвета заливки или скрывать части логотипа. Если вставить его через <code>img</code>, внутренее содержимое картинки по наведению менять не получится, хотя стилизация с помощью CSS-фильтров или трансформаций самого <code>img</code> всё ещё будет доступна.</p>\n<p>Во всех браузерах читалки корректно читают картинку с <code>alt</code>. NVDA В IE10 прочитала не только <code>alt</code>, но и урлы картинок.</p>\n<h2 id=inline-svg><a href=\"#inline-svg\">Инлайновый SVG</a></h2>\n\n<p>Пример разметки:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 100 50<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span>\n</code></pre></figure>\n<h3>Доступность: 4/6</h3>\n\n<ul class=\"ally-list\">\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">без стилей</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">без картинок</span>\n   <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n   <span class=\"ally-list__text\">для печати</span>\n  <span class=\"ally-list__text\">да</span>\n </li>\n <li class=\"ally-list__item ally-list__item--no\">\n   <span class=\"ally-list__text\">для копирования</span>\n   <span class=\"ally-list__text\">нет</span>\n </li>\n <li class=\"ally-list__item ally-list__item--bad\">\n   <span class=\"ally-list__text\">для скринридеров</span>\n   <span class=\"ally-list__text\">плохо</span>\n </li>\n <li class=\"ally-list__item ally-list__item--yes\">\n     <span class=\"ally-list__text\">эффекты по наведению</span>\n     <span class=\"ally-list__text\">да</span>\n </li>\n</ul>\n\n<p>Код такого логотипа, скорее всего, будет довольно развесистым и с ним будет не очень удобно работать, но по сравнению с предыдущими способами у него есть несколько преимуществ: логотип не сломается при отвалившихся стилях, на него никак не повлияют выключенные картинки и он не потеряется при печати.</p>\n<p>Правда, если оформление логотипа задано в CSS, без стилей он может стать просто чёрным, но его всё ещё можно будет прочитать.</p>\n<p>Также векторному логотипу обязательно нужно задавать в атрибутах ширину и высоту, даже если вы потом планируете переопределить их стилями. Дело в том, что SVG-изображение, у которого задан <code>viewBox</code>, но не заданы размеры, постарается занять <a href=\"https://codepen.io/yoksel/full/GNPLoB/\">всё доступное пространство</a>. Чтобы без стилей страница не превращалась в парад гигантских иконок, достаточно всем SVG на странице указать ширину и высоту, потом вы легко сможете задать в CSS нужные размеры (приоритет в данному случае будет у CSS).</p>\n<p>С доступностью для скринридеров всё не так просто. В SVG есть специальные элементы для описания содержимого: <code>title</code> и <code>desc</code>, но они читаются не всеми читалками и не во всех браузерах. Например, Firefox и Safari их читают, а Chrome — нет. Я рассматриваю вариант последовательного чтения страницы сверху вниз, поведение по наведению на элемент может отличаться. Также в SVG можно вставить текст, но он прочитается только в Хроме. Если указать в SVG заголовок, описание и текст одновременно, такой элемент может быть прочитан в большинстве браузеров.</p>\n<p>Также Леони Уотсон <a href=\"https://www.sitepoint.com/tips-accessible-svg/\">рекомендует</a> добавить атрибут <code>aria-labelledby</code>, указав в нём <code>id</code> заголовка и описания. Получится примерно такое:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 100 50<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">aria-labelledby</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title desc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>desc</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>desc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Description<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>desc</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span> <span class=\"token attr-name\">y</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Text<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span>\n</code></pre></figure>\n<p>Таким образом можно сделать SVG максимально доступным для скринридеров, но следует помнить, что поведение разных скринридеров может отличаться, также как и доступность элементов в разных браузерах и на разных операционных системах. Перед использованием кода на реальных сайтах всё обязательно нужно тестировать.</p>\n<h2 id=choice><a href=\"#choice\">Что лучше выбрать?</a></h2>\n\n<ul>\n    <li>\n        <b>логотип картинкой</b> — cамый надёжный способ, но он может оказаться неподходящим, если нужна интерактивность;\n    </li>\n    <li>\n        <b>логотип фоном</b> позволит добавить эффекты вроде замены картинки по наведению. В случае использования SVG-изображения, код не будет загромождать разметку, доступность можно обеспечить вспомогательными атрибутами, а проблема печати фонов решается стилями для печати;\n    </li>\n    <li>\n        <b>инлайновый SVG</b> даёт более широкие возможности взаимодействия с помощью CSS или JS, но код будет загромождать разметку, а о доступности для скринридеров нужно позаботиться отдельно.\n    </li>\n</ul>\n\n<p>Вообще если логотип одновременно выполняет обязанности названия сайта, возможно, для надёжности имеет смысл переложить эти обязанности на какой-нибудь заголовок с <code>.visuallyhidden</code>, а логотип оставить только для визуального отображения. Чтобы для скринридеров объявить логотип картинкой (если он не картинка, конечно), ему можно добавить <code>role=\"img\"</code> + <code>aria-label</code>, после этого скринридеры перестают читать содержимое элемента как конент и начинают воспринимать его как изображение.</p>\n<h2 id=accessibility-for-search><a href=\"#accessibility-for-search\">Доступность для поисковиков</a></h2>\n\n<p>Изначально это вид доступности я рассматривала вместе с остальными, но потом пришла в выводу, что он никак не зависит от разметки самого логотипа.</p>\n<p>Как я проверяла: в гугле и яндексе делала запросы вроде «&lt;COMPANY NAME&gt; logo», ожидая увидеть логотипы с сайта компании в начале поисковой выдачи поиска по картинкам. Яндекс почему-то редко находил то, что нужно, зато гугл всегда первыми результатами показывал искомые логотипы, если только мог их найти.</p>\n<p>Так вот: на Яндексе, Youtube и Facebook логотип сделан фоном, но при этом логотипы всех этих компаний легко находятся гуглом. У всех трёх компаний есть страницы с логотипами и у всех логотип указан в микроразметке.</p>\n<p>У Гитхаба логотип сделан инлайновым SVG, но PNG-версия указана в микроразметке, а также есть страница с логотипами. Логотипы Гитхаба гугл находит без проблем.</p>\n<p>По моим наблюдениям, гугл изначально показывает картинку из микроразметки, но если есть страница с логотипами, предпочтёт показывать картинки оттуда. Если логотип сделан картинкой, но на сайте есть микроразметка, содержащая ссылку на логотип, гугл выберет картинку из микроразметки. Например, так сделано на сайте <a href=\"http://www.zeldman.com/\">Джеффри Зельдмана</a>, и гугл показывает картинку из микроразметки, картинка с названием сайта при этом в поиске не обнаруживается.</p>\n<p>Из этого я делаю вывод, что гуглу совершенно всё равно как выглядит разметка вашего логотипа, потому что он никак её не использует. Так что если вы хотите помочь поисковым роботам, укажите ссылку на логотип в микроразметке. Если вы хотите помочь людям, которые будут искать логотип компании, сделайте страницу с логотипами. Разметка логотипа на странице не решает такие задачи.</p>\n<p>В заключение (этой кошмарно длинной статьи) следует сказать, что я ни разу не эксперт по доступности и могла допустить ошибки и неточности. Сообщите мне о них, пожалуйста, если встретятся. Также буду рада дополнениям и хорошим ссылкам по теме.</p>\n<h2 id=screenreaders><a href=\"#screenreaders\">Комментарии по работе с читалками</a></h2>\n\n<ul>\n    <li>VoiceOver удобный, показывает читаемый элемент и показывает текст, который читает в данный момент, это очень удобно для тестирования;</li>\n    <li>NVDA свободно распространяется, быстро устанавливается и готов к работе сразу. Читаемый элемент не показывает, но может показывать читаемый текст в отдельном окне;</li>\n    <li>Jaws платный, но есть версия для тестирования, которую нужно перезапускать раз в 40 минут вместе с перезагрузкой компа. У меня очень долго скачивался и ставился, потребовав в процессе несколько раз перегрузить комп. Текущий элемент не подсвечивает, читаемый текст не показывает. Возможно, он всё это умеет, но я в настройках не нашла, и воспользоваться им как следует у меня не получилось.</li>\n</ul>\n\n<p>Спасибо <a href=\"https://twitter.com/ki_zu\">Роме Комарову</a> за помощь с текстом.</p>\n","links":[{"href":"https://www.w3.org/WAI/tutorials/images/","text":"Web Accessibility Tutorials: Images Concepts"},{"href":"http://www.freedomscientific.com/Products/Blindness/JAWS","text":"JAWS"},{"href":"http://www.nvaccess.org/","text":"NVDA"},{"href":"https://developers.google.com/search/docs/guides/intro-structured-data","text":"Руководство по микроразметке от Google"},{"href":"https://webmaster.yandex.ru/tools/microtest/","text":"Валидатор микроразметки от Яндекса"},{"href":"https://www.sitepoint.com/tips-accessible-svg/","text":"Tips for Creating Accessible SVG (By Léonie Watson)"},{"href":"https://bitsofco.de/styling-broken-images/","text":"Styling Broken Images"},{"href":"https://yoksel.github.io/ally-for-logo/","text":"Тестовая страница с логотипами"}],"tags":["a11y"],"customCSS":"ally-for-logo.css","navItems":[{"id":"bg","text":"Логотип фоном","level":0},{"id":"img","text":"Логотип картинкой","level":0},{"id":"inline-svg","text":"Инлайновый SVG","level":0},{"id":"choice","text":"Что лучше выбрать?","level":0},{"id":"accessibility-for-search","text":"Доступность для поисковиков","level":0},{"id":"screenreaders","text":"Комментарии по работе с читалками","level":0}],"date":"2016-12-20"},"posts":[{"date":"2020-09-26","href":"/css-math","text":"Математические функции в CSS","type":"post"},{"date":"2020-09-24","href":"/adaptive-video-with-css-math","text":"Адаптивное видео с помощью встроенных математических функций CSS","type":"post"},{"date":"2020-08-30","href":"/inaccessibility","text":"Недоступность в картинках","type":"post"},{"date":"2020-08-13","href":"/size-units","text":"Единицы размеров в CSS","type":"post"},{"date":"2020-07-27","href":"/color-themes-generator","text":"Генератор цветовых тем","type":"post"},{"date":"2020-07-25","href":"/jekyll-gatsby","text":"Jekyll → Gatsby","type":"post"},{"date":"2018-06-18","href":"/opentype-variable-fonts","text":"Вариативные шрифты","type":"post"},{"date":"2017-08-15","href":"/svg-sizes","text":"Размеры в SVG","type":"post"},{"date":"2017-01-13","href":"/adaptive-pixel-perfect","text":"Адаптивный Pixel Perfect","type":"post"},{"date":"2016-12-20","href":"/a11y-for-logotypes","text":"Логотип не отвечает или временно недоступен","type":"post"},{"date":"2016-11-23","href":"/svg-patterns","text":"SVG-паттерны","type":"post"},{"date":"2016-08-18","href":"/svg-bubble","text":"Мыльные пузыри на SVG","type":"post"},{"date":"2016-08-11","href":"/svg-gradients","text":"SVG-градиенты","type":"post"},{"date":"2016-02-12","href":"/funny-little-console","text":"Весёлая консолька","type":"post"},{"date":"2016-02-04","href":"/svg-masks","text":"SVG-маски","type":"post"},{"date":"2015-07-06","href":"/scroll-snap","text":"Умная прокрутка со Scroll Snap Points","type":"post"},{"date":"2014-08-11","href":"/css-animation-algorithms","text":"CSS-анимации для ротации изображений","type":"post"},{"date":"2014-08-10","href":"/animated-svg-mask","text":"Анимированные SVG-маски","type":"post"},{"date":"2014-07-26","href":"/svg-stroke","text":"Странности обводки в SVG","type":"post"},{"date":"2014-07-08","href":"/svg-preloaders","text":"SVG-прелоадеры","type":"post"},{"date":"2014-07-04","href":"/animated-gradients-2","text":"Анимируем градиенты ещё раз","type":"post"},{"date":"2014-06-15","href":"/background-blend-mode","text":"Background-blend-mode","type":"post"},{"date":"2014-04-17","href":"/svg-decoration","text":"Возможности оформления SVG","type":"post"},{"date":"2014-04-12","href":"/css-and-svg-masks","text":"CSS и SVG маски","type":"post"},{"date":"2014-04-06","href":"/nth-child","text":"Nth-child и nth-of-type","type":"post"},{"date":"2014-03-29","href":"/svg-icons","text":"SVG-иконки","type":"post"},{"date":"2014-03-27","href":"/svg-fill-and-stroke","text":"SVG: заливка и обводка","type":"post"},{"date":"2014-03-23","href":"/svg-path","text":"SVG-path","type":"post"},{"date":"2014-03-22","href":"/svg-groups-use","text":"SVG: группировка и переиспользование элементов","type":"post"},{"date":"2014-03-21","href":"/svg-shapes","text":"SVG-фигуры и трансформации","type":"post"},{"date":"2014-03-19","href":"/svg","text":"SVG","type":"post"},{"date":"2014-03-04","href":"/3d-and-gradients","text":"СSS-градиенты и 3D","type":"post"},{"date":"2014-02-23","href":"/shadowpainter","text":"Рисовалка анимированных теней","type":"post"},{"date":"2014-02-12","href":"/new-patterns","text":"Свежие CSS-паттерны","type":"post"},{"date":"2014-02-07","href":"/css-patterns","text":"CSS-паттерны","type":"post"},{"date":"2014-02-05","href":"/radial-gradients","text":"Радиальные градиенты","type":"post"},{"date":"2014-02-04","href":"/linear-gradients","text":"Линейные градиенты","type":"post"},{"date":"2014-01-25","href":"/tic-tac-toe","text":"Крестики-нолики на CSS","type":"post"},{"date":"2014-01-22","href":"/border-image","text":"Border-image","type":"post"},{"date":"2014-01-19","href":"/digital-watch","text":"Электронные часы на CSS и JS.","type":"post"},{"date":"2014-01-03","href":"/specifity","text":"Сколько весят селекторы?","type":"post"},{"date":"2014-01-02","href":"/unicode","text":"Символы юникода","type":"post"},{"date":"2013-12-22","href":"/content","text":"Свойство content","type":"post"},{"date":"2013-12-16","href":"/animation-for-gradients","text":"Анимируем CSS-градиенты","type":"post"},{"date":"2013-12-09","href":"/text-effects","text":"Текстовые эффекты","type":"post"},{"date":"2013-11-27","href":"/list-like-tree","text":"Древовидный список на CSS","type":"post"},{"date":"2013-11-20","href":"/css-selectors-part2","text":"Css-селекторы, часть 2","type":"post"},{"date":"2013-11-16","href":"/css-selectors","text":"Css-селекторы","type":"post"},{"date":"2013-10-22","href":"/kontekst-nalozheniya","text":"Контекст наложения","type":"post"},{"date":"2013-10-09","href":"/box-sizing","text":"Box-sizing","type":"post"},{"date":"2013-10-09","href":"/dva-sposoba-proshit-e-lement-po-krayu","text":"Два способа \"прошить\" элемент по краю","type":"post"},{"date":"2013-10-06","href":"/tsveta","text":"Цвета в CSS","type":"post"},{"date":"2013-10-04","href":"/fon-pod-strochkami-dobavlyaem-polya","text":"Фон под строчками: добавляем поля","type":"post"},{"date":"2013-09-29","href":"/box-shadow","text":"Box-shadow","type":"post"},{"date":"2013-09-27","href":"/css-figury-lepestok","text":"Css-фигуры: лепесток","type":"post"},{"date":"2013-09-26","href":"/3d-cube","text":"3D-куб","type":"post"},{"date":"2013-09-26","href":"/css-animation","text":"Css Animation","type":"post"},{"date":"2013-09-26","href":"/transform","text":"Transform","type":"post"},{"date":"2013-09-17","href":"/border-radius","text":"Border-radius","type":"post"},{"date":"2013-09-10","href":"/first-letter","text":"First letter","type":"post"},{"date":"2013-09-06","href":"/css-figury","text":"CSS-фигуры","type":"post"},{"date":"2013-09-06","href":"/eti-glaza-naprotiv","text":"Эти глаза напротив","type":"post"},{"date":"2013-09-04","href":"/strelki-s-pomoshh-yu-svojstva-border","text":"Стрелки с помощью свойства border","type":"post"},{"date":"2013-09-03","href":"/flexbox","text":"Flexbox","type":"post"}],"pages":[{"date":"2014-03-19","type":"page","href":"/pages/svg-links","text":"SVG: полезные ссылки"},{"date":"2013-11-16","type":"page","href":"/pages/css-selectors","text":"CSS-селекторы одной таблицей"},{"date":"2013-10-06","type":"page","href":"/pages/tablitsa-imenovanny-h-tsvetov","text":"Таблица именованных цветов"},{"date":"2013-09-27","type":"page","href":"/pages/transform-functions","text":"Функции Transform"},{"date":"2013-09-26","type":"page","href":"/pages/svojstva-animation","text":"Свойства Animation одной таблицей"},{"date":"2013-09-26","type":"page","href":"/pages/svojstva-transform","text":"Свойства Transform"},{"date":"2013-09-04","type":"page","href":"/pages/razny-j-sintaksis-flexbox","text":"Разный синтаксис Flexbox"},{"date":"2013-09-03","type":"page","href":"/pages/svojstva-flexbox","text":"Свойства Flexbox одной таблицей"}],"prevNext":{"prev":{"date":"2016-11-23","href":"/svg-patterns","text":"SVG-паттерны","type":"post","id":"previous"},"next":{"date":"2017-01-13","href":"/adaptive-pixel-perfect","text":"Адаптивный Pixel Perfect","type":"post","id":"next"}}},"__N_SSG":true}