{"pageProps":{"article":{"title":"Генератор цветовых тем","slug":"color-themes-generator","content":"<p>В конце марта я выпустила инструмент для генерации цветовых тем из CSS/SCSS/Less-переменных — <a href=\"https://yoksel.github.io/tema/\">Tema</a>. Он может быть полезен для карманных проектов без фиксированного дизайна, когда цвета подбираются прямо в&nbsp;процессе разработки. Я немного расскажу про историю появления и&nbsp;покажу как его можно использовать.</p>\n<p>Идея генератора возникла когда я начала делать другой свой проект — <a href=\"https://yoksel.github.io/grid-cheatsheet/\">Grid Сheatsheet</a>. У меня уже был очень похожий справочник, <a href=\"https://yoksel.github.io/flex-cheatsheet/\">Flex Сheatsheet</a>, и&nbsp;изначально я собиралась просто поменять данные и&nbsp;легко и&nbsp;непринуждённо получить шпаргалку по гридам, но всё оказалось сложнее: у гридов немного другая структура спецификации, которая не ложилась в&nbsp;существующую структуру справочника, да и&nbsp;JavaScript я теперь знаю немного получше, поэтому движок для справочников в&nbsp;итоге пришлось переписать полностью. Но вернёмся к&nbsp;цветовым темам и&nbsp;посмотрим с чего всё началось.</p>\n<p>В день запуска шпаргалки по флексам самым популярным вопросом стало «А что с цветами?» На тот момент страница справочника выглядела вот так:</p>\n<p><img\n  src=\"/assets/img/articles/color-themes-generator/flex-first-theme.png\"\n  alt=\"Flex cheat sheet в&nbsp;момент старта\"\n  loading=\"lazy\"\n  width=\"600\"\n/></p>\n<p>Я подобрала палитру на свой вкус и&nbsp;мне было отлично, но желающих сделать что-то с цветами оказалось достаточно много, поэтому я по-быстрому прикрутила более нейтральную тему:</p>\n<p><img\n  src=\"/assets/img/articles/color-themes-generator/flex-gray-theme.png\"\n  alt=\"Flex cheat sheet с серой темой\"\n  loading=\"lazy\"\n  width=\"600\"\n/></p>\n<p>Когда я начала делать справочник по гридам и&nbsp;переписывать движок, в&nbsp;нём менялось примерно всё, и&nbsp;вёрстка, конечно, тоже. Переключение тем хотелось сохранить, но с каждым новым изменением в&nbsp;разметке это становилось всё сложнее, потому что дополнительная тема была сделана путём простого переопределения дефолтных стилей элементов стилями из файла с темой. Если нужно было перекрасить какой-то элемент, его стили дублировались в&nbsp;файле с темой, и&nbsp;цвета менялись на новые.</p>\n<p>Для проекта, который один раз сделали и&nbsp;забыли, это не проблема, но в&nbsp;процессе активной разработки поддерживать в&nbsp;актуальном состоянии файл с темой становилось проблематично. Хотелось сохранить цветную тему, но при этом как-то обойтись без дублирования стилей.</p>\n<p>Препроцессорные переменные не помогают решить эту задачу, потому что их нельзя использовать в&nbsp;одном месте, а потом переопределить по классу и&nbsp;получить в&nbsp;другом месте CSS-свойство с новым значением:</p>\n<iframe height=\"350\"\n      style=\"width: 100%\"\n      title=\"VweNYRj\"\n      src=\"https://codepen.io/yoksel/embed/VweNYRj?&default-tab=css,result\"\n    ></iframe>\n\n<p>Чтобы второй квадратик стал жёлтым, придется продублировать всё свойство, где используется переменная.</p>\n<p>Но есть <a href=\"https://www.w3.org/TR/css-variables/\">кастомные свойства</a>, которые работают как нужно:</p>\n<iframe height=\"370\"\n      style=\"width: 100%\"\n      title=\"Custom property can be overwritten inside class\"\n      src=\"https://codepen.io/yoksel/embed/OJMGVyQ?&default-tab=css,result\"\n    ></iframe>\n\n<p>Сначала объявляем переменную <code>--color</code> и&nbsp;используем её в&nbsp;<code>background</code>. Если потом внутри класса с модификатором задать ей другое значение (например, <code>--color: gold;</code>), оно поменяется и&nbsp;в&nbsp;объявлении фона, но только для элемента с таким классом, при этом строчку с объявлением фона не нужно дублировать — просто переопределяем переменную и&nbsp;всё волшебным образом работает.</p>\n<p>Кастомные свойства не поддерживаются в&nbsp;IE11, но посетителей с IE на интересующих меня ресурсах крайне мало (меньше 1%), так что я подумала, что уже вполне могу использовать CSS-переменные в&nbsp;своих проектах.</p>\n<p>Делать темы с ними, конечно, гораздо удобнее. Например, есть такая карточка:</p>\n<iframe height=\"420\"\n      style=\"width: 100%\"\n      title=\"LYGvpVQ\"\n      src=\"https://codepen.io/yoksel/embed/LYGvpVQ?&default-tab=result\"\n    ></iframe>\n\n<p>И вот такой набор цветов для неё:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--body-bg</span><span class=\"token punctuation\">:</span> whitesmoke\n  <span class=\"token property\">--card-bg</span><span class=\"token punctuation\">:</span> #FFF<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--border</span><span class=\"token punctuation\">:</span> #CCC<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--shadow</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">,</span>.1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--title</span><span class=\"token punctuation\">:</span> teal<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--text</span><span class=\"token punctuation\">:</span> #333<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--link</span><span class=\"token punctuation\">:</span> mediumseagreen<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--link-hover</span><span class=\"token punctuation\">:</span> turquoise<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></figure>\n<p>Если потом потребуется добавить такую же карточку но с другими цветами, для этого не придется дублировать всю разметку, достаточно переопределить нужные переменные внутри класса:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* Цвета по умолчанию */</span>\n  <span class=\"token property\">--body-bg</span><span class=\"token punctuation\">:</span> whitesmoke\n  <span class=\"token property\">--card-bg</span><span class=\"token punctuation\">:</span> #FFF<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--border</span><span class=\"token punctuation\">:</span> #CCC<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--shadow</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">,</span>.1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--title</span><span class=\"token punctuation\">:</span> teal<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--text</span><span class=\"token punctuation\">:</span> #333<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--link</span><span class=\"token punctuation\">:</span> mediumseagreen<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--link-hover</span><span class=\"token punctuation\">:</span> turquoise<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.widget--red</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* Цвета для красной карточки */</span>\n  <span class=\"token property\">--card-bg</span><span class=\"token punctuation\">:</span> mistyrose<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--border</span><span class=\"token punctuation\">:</span> tomato<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--shadow</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>200<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">,</span>.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--title</span><span class=\"token punctuation\">:</span> orangered<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--link</span><span class=\"token punctuation\">:</span> tomato<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--link-hover</span><span class=\"token punctuation\">:</span> crimson<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></figure>\n<iframe height=\"420\"\n      style=\"width: 100%\"\n      title=\"Custom properties example #2\"\n      src=\"https://codepen.io/yoksel/embed/bGEJeOp?&default-tab=result\"\n    ></iframe>\n\n<p>Также, в&nbsp;отличие от препроцессорных переменных, кастомные свойства видны в&nbsp;веб-инспекторе:</p>\n<p><img\n  src=\"/assets/img/articles/color-themes-generator/custom-props-in-devtools.png\"\n  alt=\"Кастомные свойства в&nbsp;веб-инспекторе\"\n  loading=\"lazy\"\n  width=\"500\"\n/></p>\n<p>И их подсказывает браузер:</p>\n<p><img\n  src=\"/assets/img/articles/color-themes-generator/custom-prop-suggestions.png\"\n  alt=\"Браузер подсказывает кастомные свойства\"\n  loading=\"lazy\"\n  width=\"500\"\n/></p>\n<p>Можно просто листать переменные вверх-вниз и&nbsp;сразу видеть изменения на странице. Это невероятно удобно.</p>\n<p>С кастомными свойствами работать с темами стало проще, но чем больше цветов я выносила в&nbsp;переменные, тем сложнее становилось подбирать оттенки.</p>\n<p>В изначальной палитре 5 цветов, в&nbsp;оформлении справочника требуется около сорока цветовых переменных, где брать оттенки? Конечно, какие-то цвета можно использовать несколько раз, но всё равно их не хватает.</p>\n<p>Ещё часто нужен оттенок чуть светлее, или чуть темнее (например, ссылка немного меняет цвет при наведении), сделать это в паре мест не проблема, но если таких вариаций десяток? С каким шагом будет меняться яркость? Шаг общий для всех или в каждом случае свой? Значит ещё надо как-то унифицировать шаги изменения цвета.</p>\n<p>Или вот другая проблема: у справочника нет фиксированного дизайна, значит какие-то оттенки нужно подбирать в&nbsp;процессе вёрстки. Как удобно «ходить» по цветам? Например, взять оттенок, потом попробовать чуть более темную версию или более светлую, но при этом чтобы можно было легко перейти к&nbsp;любой из них?</p>\n<p>Где-то в&nbsp;этом месте мне пришла в&nbsp;голову мысль, что хорошо бы палитра с вариациями оттенков светлее/темнее собиралась сама по себе — чтобы сразу были оттенки, по которым можно ходить, без необходимости подбирать их руками.</p>\n<p>Для манипуляций с цветом удобно использовать формат HSL (Hue-Saturation-Lightness). Главные преимущества формата — читаемость и&nbsp;возможность поменять значение руками. Конечно, редактировать руками можно цвета, записанные в&nbsp;любом формате, но только в&nbsp;HSL это понятный и&nbsp;управляемый процесс (поэтому это мой любимый формат). Запись цвета в&nbsp;HSL выглядит вот так:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 100%<span class=\"token punctuation\">,</span> 35%<span class=\"token punctuation\">)</span>\n</code></pre></figure>\n<p>Первое значение — позиция на цветовом круге в&nbsp;градусах (от 0 до 360). Второе — насыщенность, третье — яркость. Второе и&nbsp;третье значения задаются в&nbsp;процентах, от 0 до 100%.</p>\n<p>Если записать цвет в&nbsp;HSL, а потом менять яркость (третий параметр), из основного цвета можно получить дополнительные оттенки. Например:</p>\n<iframe height=\"450\"\n      style=\"width: 100%\"\n      title=\"HSL Variations\"\n      src=\"https://codepen.io/yoksel/embed/GRoLmbX?&default-tab=result\"\n    ></iframe>\n\n<p>Из трёх изначальных цветов легко получается ещё шесть. Такую палитру можно просто написать руками.</p>\n<p>В обе стороны можно сделать до 50 шагов изменения яркости, но тут встаёт проблема имён: если шагов слишком много, для них будет сложно подобрать вменяемые названия, так что количество шагов ограничивается доступными именами переменных. Я остановилась на такой системе именования:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Тёмные оттенки */</span>\n<span class=\"token property\">--color-darkest</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>...<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">--color-darker</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>...<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">--color-dark</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>...<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/* Базовый цвет */</span>\n<span class=\"token property\">--color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>...<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/* Светлые оттенки */</span>\n<span class=\"token property\">--color-light</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>...<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">--color-lighter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>...<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">--color-lightest</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>...<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></figure>\n<p>Чуть светлее — <code>light</code>, ещё светлее — <code>lighter</code>, самый светлый — <code>lightest</code>. С тёмными аналогично. Итого семь оттенков для каждого цвета: один базовый и&nbsp;по три шага в&nbsp;каждую сторону.</p>\n<p>Чтобы автоматизировать процесс получения палитры, я сделала <a href=\"https://yoksel.github.io/tema/\">Tema</a>. В&nbsp;поле ввода вставляются любые переменные с цветами в&nbsp;любом формате, включая именованные, и&nbsp;инструмент отдаёт расширенный набор цветовых переменных:</p>\n<p><img\n  src=\"/assets/img/articles/color-themes-generator/tema-io.png\"\n  alt=\"Tema, поля ввода и&nbsp;вывода\"\n  loading=\"lazy\"\n  width=\"700\"\n/></p>\n<p>Получается удобная упорядоченная палитра, по которой можно легко «ходить» меняя имя переменной в коде или в веб-инспекторе, и&nbsp;пробовать не только основные цвета, но и дополнительные оттенки без необходимости редактировать руками значение цвета.</p>\n<p>Можно настроить шаг изменения яркости, количество шагов и&nbsp;выбрать формат цветов в&nbsp;итоговом наборе:</p>\n<p><img\n  src=\"/assets/img/articles/color-themes-generator/tema-options.png\"\n  alt=\"Tema, настройки\"\n  loading=\"lazy\"\n  width=\"700\"\n/></p>\n<p>Полученная палитра копируется в&nbsp;файлы со стилями и&nbsp;можно начинать пользоваться.</p>\n<p>Правда, при такой системе именования цвета имеют абстрактные имена и&nbsp;уже не привязаны к&nbsp;месту использования. Это решается дополнительными переменными, которые связывают одно с другим:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* Палитра */</span>\n  <span class=\"token property\">--color-1-darkest</span><span class=\"token punctuation\">:</span> #f7cd22<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--color-1-darker</span><span class=\"token punctuation\">:</span> #f9d958<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--color-1-dark</span><span class=\"token punctuation\">:</span> #fbe58f<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* ...  */</span>\n  <span class=\"token property\">--color-5-light</span><span class=\"token punctuation\">:</span> #988b78<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--color-5-lighter</span><span class=\"token punctuation\">:</span> #b0a797<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--color-5-lightest</span><span class=\"token punctuation\">:</span> #c8c2b7<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/* Привязка цветов к переменным для стилизации интерфейса */</span>\n  <span class=\"token property\">--body-bg</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--color-3-lighter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--card-bg</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--color-1-light<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--border</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--color-3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--shadow</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">,</span>0<span class=\"token punctuation\">,</span>.1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--title</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--color-4-darker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--text</span><span class=\"token punctuation\">:</span> #333<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--link</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--color-4-darker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--link-hover</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--color-4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></figure>\n<iframe height=\"420\"\n      style=\"width: 100%\"\n      title=\"Custom properties example #3\"\n      src=\"https://codepen.io/yoksel/embed/yLerzJw?&default-tab=result\"\n    ></iframe>\n\n<p>При таком подходе цвета лежат отдельно от переменных, используемых непосредственно для стилизации, и&nbsp;если во втором блоке поменять какой-либо цвет на другой, переменные с цветами палитры не потеряются и&nbsp;будут доступны для дальнейшего использования.</p>\n<p>Также разделение хранения и&nbsp;использования цветов позволяет легко добавлять на сайт новые цветовые темы. Палитры добавляются в&nbsp;стили, в&nbsp;качестве селектора, который будет ограничивать их действие, удобно использовать data-атрибут (ему потом будет проще перезаписать значение через JS):</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">[data-theme=\"red\"]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--color-1-darkest</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>48<span class=\"token punctuation\">,</span> 93%<span class=\"token punctuation\">,</span> 61%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* ... */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">[data-theme=\"blue\"]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--color-1-darkest</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>48<span class=\"token punctuation\">,</span> 93%<span class=\"token punctuation\">,</span> 61%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* ... */</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></figure>\n<p>Затем атрибут <code>data-theme</code> добавляется на элемент <code>&lt;html&gt;</code> и&nbsp;его значения меняются по клику на переключатель темы:</p>\n<iframe height=\"420\"\n      style=\"width: 100%\"\n      title=\"Custom properties example #4\"\n      src=\"https://codepen.io/yoksel/embed/QWyPqMz?&default-tab=result\"\n    ></iframe>\n\n<p>При изменении атрибута CSS-переменные, заданные для него в&nbsp;стилях, перезаписывают значения исходных переменных, и&nbsp;страница перекрашивается. Никакого дублирования стилей или перекрашивания переменных вручную — один набор переменных просто переопределяет другой. Работает как волшебство.</p>\n<p>Если в&nbsp;какой-то из тем один из оттенков оказался не совсем подходящим, ниже под палитрой темы можно переопределить значение переменной для стилизации:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">[data-theme=\"red\"]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--color-1-darkest</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsl</span><span class=\"token punctuation\">(</span>48<span class=\"token punctuation\">,</span> 93%<span class=\"token punctuation\">,</span> 61%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* ... */</span>\n\n  <span class=\"token property\">--border</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--color-3-light<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></figure>\n<p>Например, в&nbsp;предыдущем демо в&nbsp;красной теме третий цвет (<code>--color-3</code>), используемый для рамки, оказался чуть темнее, чем хотелось бы, поэтому внутри темы я&nbsp;задала для <code>--border</code> более светлый оттенок (<code>--color-3-light</code>).</p>\n<p>Именно этот подход позволил мне не только сохранить и&nbsp;поддерживать дополнительную тему, но&nbsp;и&nbsp;добавить 4&nbsp;новых. Я обычно использую эту:</p>\n<p><img\n  src=\"/assets/img/articles/color-themes-generator/flex-sunny-theme.png\"\n  alt=\"Tema, настройки\"\n  loading=\"lazy\"\n  width=\"700\"\n/></p>\n<p>Но есть и&nbsp;более спокойные варианты : )</p>\n<p>Генератор цветовых тем решает довольно узкую задачу, и&nbsp;вполне возможно, что он вам никогда и&nbsp;не потребуется, но если вы, как и&nbsp;я, не рисуете отдельный дизайн для своих карманных проектов, инструмент может упростить разработку и&nbsp;расширить возможности оформления.</p>\n<p>При создании тем с помощью генератора нужно иметь в&nbsp;виду пару нюансов:</p>\n<ol>\n<li><p>Количество цветов в&nbsp;наборах должно совпадать. Например, если в одной из цветовых тем используется <code>var(--color-1-lightest)</code>, самый светлый оттенок самого светлого цвета, он должен быть во всех наборах цветов. Но при генерации палитры рассчитанное значение яркости может выйти за границы разумного, и&nbsp;тогда этих цветов в&nbsp;наборе не будет: <img\n  src=\"/assets/img/articles/color-themes-generator/tema-broken-colors.png\"\n  alt=\"Tema, битые цвета\"\n  loading=\"lazy\"\n/> Нужно помнить, что так бывает, и&nbsp;обязательно проверять все ли цвета на месте.</p>\n</li>\n<li><p>Чтобы палитры были взаимозаменяемыми, порядок цветов в&nbsp;них должен совпадать. Например, во всех идти от самого светлого цвета к&nbsp;самому тёмному. Тогда для добавления новой темы будет достаточно положить новый набор переменных в&nbsp;CSS.</p>\n</li>\n</ol>\n","links":[{"href":"https://www.w3.org/TR/css-variables/","text":"CSS Custom Properties for Cascading Variables"},{"href":"https://yoksel.github.io/tema/","text":"Tema"},{"href":"/tsveta","text":"Цвета в CSS"},{"href":"https://yoksel.github.io/handy-colors/","text":"Handy colors","desc":"именованные цвета с палитрами"}],"tags":["tools"],"navItems":[],"date":"2020-07-27"},"posts":[{"date":"2020-09-26","href":"/css-math","text":"Математические функции в CSS","type":"post"},{"date":"2020-09-24","href":"/adaptive-video-with-css-math","text":"Адаптивное видео с помощью встроенных математических функций CSS","type":"post"},{"date":"2020-08-30","href":"/inaccessibility","text":"Недоступность в картинках","type":"post"},{"date":"2020-08-13","href":"/size-units","text":"Единицы размеров в CSS","type":"post"},{"date":"2020-07-27","href":"/color-themes-generator","text":"Генератор цветовых тем","type":"post"},{"date":"2020-07-25","href":"/jekyll-gatsby","text":"Jekyll → Gatsby","type":"post"},{"date":"2018-06-18","href":"/opentype-variable-fonts","text":"Вариативные шрифты","type":"post"},{"date":"2017-08-15","href":"/svg-sizes","text":"Размеры в SVG","type":"post"},{"date":"2017-01-13","href":"/adaptive-pixel-perfect","text":"Адаптивный Pixel Perfect","type":"post"},{"date":"2016-12-20","href":"/a11y-for-logotypes","text":"Логотип не отвечает или временно недоступен","type":"post"},{"date":"2016-11-23","href":"/svg-patterns","text":"SVG-паттерны","type":"post"},{"date":"2016-08-18","href":"/svg-bubble","text":"Мыльные пузыри на SVG","type":"post"},{"date":"2016-08-11","href":"/svg-gradients","text":"SVG-градиенты","type":"post"},{"date":"2016-02-12","href":"/funny-little-console","text":"Весёлая консолька","type":"post"},{"date":"2016-02-04","href":"/svg-masks","text":"SVG-маски","type":"post"},{"date":"2015-07-06","href":"/scroll-snap","text":"Умная прокрутка со Scroll Snap Points","type":"post"},{"date":"2014-08-11","href":"/css-animation-algorithms","text":"CSS-анимации для ротации изображений","type":"post"},{"date":"2014-08-10","href":"/animated-svg-mask","text":"Анимированные SVG-маски","type":"post"},{"date":"2014-07-26","href":"/svg-stroke","text":"Странности обводки в SVG","type":"post"},{"date":"2014-07-08","href":"/svg-preloaders","text":"SVG-прелоадеры","type":"post"},{"date":"2014-07-04","href":"/animated-gradients-2","text":"Анимируем градиенты ещё раз","type":"post"},{"date":"2014-06-15","href":"/background-blend-mode","text":"Background-blend-mode","type":"post"},{"date":"2014-04-17","href":"/svg-decoration","text":"Возможности оформления SVG","type":"post"},{"date":"2014-04-12","href":"/css-and-svg-masks","text":"CSS и SVG маски","type":"post"},{"date":"2014-04-06","href":"/nth-child","text":"Nth-child и nth-of-type","type":"post"},{"date":"2014-03-29","href":"/svg-icons","text":"SVG-иконки","type":"post"},{"date":"2014-03-27","href":"/svg-fill-and-stroke","text":"SVG: заливка и обводка","type":"post"},{"date":"2014-03-23","href":"/svg-path","text":"SVG-path","type":"post"},{"date":"2014-03-22","href":"/svg-groups-use","text":"SVG: группировка и переиспользование элементов","type":"post"},{"date":"2014-03-21","href":"/svg-shapes","text":"SVG-фигуры и трансформации","type":"post"},{"date":"2014-03-19","href":"/svg","text":"SVG","type":"post"},{"date":"2014-03-04","href":"/3d-and-gradients","text":"СSS-градиенты и 3D","type":"post"},{"date":"2014-02-23","href":"/shadowpainter","text":"Рисовалка анимированных теней","type":"post"},{"date":"2014-02-12","href":"/new-patterns","text":"Свежие CSS-паттерны","type":"post"},{"date":"2014-02-07","href":"/css-patterns","text":"CSS-паттерны","type":"post"},{"date":"2014-02-05","href":"/radial-gradients","text":"Радиальные градиенты","type":"post"},{"date":"2014-02-04","href":"/linear-gradients","text":"Линейные градиенты","type":"post"},{"date":"2014-01-25","href":"/tic-tac-toe","text":"Крестики-нолики на CSS","type":"post"},{"date":"2014-01-22","href":"/border-image","text":"Border-image","type":"post"},{"date":"2014-01-19","href":"/digital-watch","text":"Электронные часы на CSS и JS.","type":"post"},{"date":"2014-01-03","href":"/specifity","text":"Сколько весят селекторы?","type":"post"},{"date":"2014-01-02","href":"/unicode","text":"Символы юникода","type":"post"},{"date":"2013-12-22","href":"/content","text":"Свойство content","type":"post"},{"date":"2013-12-16","href":"/animation-for-gradients","text":"Анимируем CSS-градиенты","type":"post"},{"date":"2013-12-09","href":"/text-effects","text":"Текстовые эффекты","type":"post"},{"date":"2013-11-27","href":"/list-like-tree","text":"Древовидный список на CSS","type":"post"},{"date":"2013-11-20","href":"/css-selectors-part2","text":"Css-селекторы, часть 2","type":"post"},{"date":"2013-11-16","href":"/css-selectors","text":"Css-селекторы","type":"post"},{"date":"2013-10-22","href":"/kontekst-nalozheniya","text":"Контекст наложения","type":"post"},{"date":"2013-10-09","href":"/box-sizing","text":"Box-sizing","type":"post"},{"date":"2013-10-09","href":"/dva-sposoba-proshit-e-lement-po-krayu","text":"Два способа \"прошить\" элемент по краю","type":"post"},{"date":"2013-10-06","href":"/tsveta","text":"Цвета в CSS","type":"post"},{"date":"2013-10-04","href":"/fon-pod-strochkami-dobavlyaem-polya","text":"Фон под строчками: добавляем поля","type":"post"},{"date":"2013-09-29","href":"/box-shadow","text":"Box-shadow","type":"post"},{"date":"2013-09-27","href":"/css-figury-lepestok","text":"Css-фигуры: лепесток","type":"post"},{"date":"2013-09-26","href":"/3d-cube","text":"3D-куб","type":"post"},{"date":"2013-09-26","href":"/css-animation","text":"Css Animation","type":"post"},{"date":"2013-09-26","href":"/transform","text":"Transform","type":"post"},{"date":"2013-09-17","href":"/border-radius","text":"Border-radius","type":"post"},{"date":"2013-09-10","href":"/first-letter","text":"First letter","type":"post"},{"date":"2013-09-06","href":"/css-figury","text":"CSS-фигуры","type":"post"},{"date":"2013-09-06","href":"/eti-glaza-naprotiv","text":"Эти глаза напротив","type":"post"},{"date":"2013-09-04","href":"/strelki-s-pomoshh-yu-svojstva-border","text":"Стрелки с помощью свойства border","type":"post"},{"date":"2013-09-03","href":"/flexbox","text":"Flexbox","type":"post"}],"pages":[{"date":"2014-03-19","type":"page","href":"/pages/svg-links","text":"SVG: полезные ссылки"},{"date":"2013-11-16","type":"page","href":"/pages/css-selectors","text":"CSS-селекторы одной таблицей"},{"date":"2013-10-06","type":"page","href":"/pages/tablitsa-imenovanny-h-tsvetov","text":"Таблица именованных цветов"},{"date":"2013-09-27","type":"page","href":"/pages/transform-functions","text":"Функции Transform"},{"date":"2013-09-26","type":"page","href":"/pages/svojstva-animation","text":"Свойства Animation одной таблицей"},{"date":"2013-09-26","type":"page","href":"/pages/svojstva-transform","text":"Свойства Transform"},{"date":"2013-09-04","type":"page","href":"/pages/razny-j-sintaksis-flexbox","text":"Разный синтаксис Flexbox"},{"date":"2013-09-03","type":"page","href":"/pages/svojstva-flexbox","text":"Свойства Flexbox одной таблицей"}],"prevNext":{"prev":{"date":"2020-07-25","href":"/jekyll-gatsby","text":"Jekyll → Gatsby","type":"post","id":"previous"},"next":{"date":"2020-08-13","href":"/size-units","text":"Единицы размеров в CSS","type":"post","id":"next"}}},"__N_SSG":true}