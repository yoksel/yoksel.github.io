{"pageProps":{"article":{"title":"Jekyll → Gatsby","slug":"jekyll-gatsby","content":"<p>На днях сайт обновил движок. Последний раз это случалось в <a href=\"/jekyll-vagrant\">2013-м</a> — тогда сайт переехал с Wordpress на <a href=\"https://jekyllrb.com/\">Jekyll</a>, сейчас — с Jekyll на <a href=\"https://www.gatsbyjs.org/\">Gatsby</a>.</p>\n<p>Мои вопросы про Gatsby вызвали довольно оживленную дискуссию в твиттере (<a href=\"https://twitter.com/yoksel/status/1285960534261739526\">1</a>, <a href=\"https://twitter.com/pepelsbey/status/1286232509915725824\">2</a>), поэтому я решила отдельно рассказать про смену движка и опыт с Gatsby.</p>\n<p>Поначалу Jekyll был довольно удобным, но со временем стал тесноват. Во-первых, сборка страниц и стилей мееедлееенная, во-вторых, он на Ruby, и если какие-то пакеты устаревали и сайт превращался в тыкву, приходилось срочно вспоминать/гуглить команды для обновления Ruby-пакетов. Когда сборка сайта запускается нечасто, и он на непривычной экосистеме, обновление может занять значительное время, а это не совсем то, чем хотелось бы заниматься, если изначально зашел просто поправить пару абзацев.</p>\n<p>Со старыми проектами такое случается: иногда нужно обновить кучу пакетов, прежде чем он в принципе запустится. Устаревающие внешние зависимости <a href=\"https://twitter.com/andrey_sitnik/status/1286029327742582784\">могут усложнить жизнь</a> независимо от экосистемы, к которой они принадлежат. Они могут оказаться несовместимы со свежей версией ноды, обновленной операционной системой или просто пакет перестаёт поддерживаться и вы больше не можете его установить — и проект двух-трёхлетней давности уже не запустить (было и такое). Будете ли вы тратить время на попытки его оживить, перепишете полностью или похороните навсегда? Внешние пакеты, которые делают что-то за вас, облегчают разработку, но делают финальный результат хрупким.</p>\n<p>Так что идея иметь как можно меньше зависимостей — хорошая и правильная, но выбирая новый движок я, честно говоря, не особо озадачивалась этим вопросом. Персональный сайт, на мой взгляд, — это не только блог, но и песочница, где можно поиграться с чем-то новым, выбирая движок не столько по практическим характеристикам, сколько по интересующим технологиям, поэтому в этот раз в качестве движка был выбран Gatsby: меня интересовали <a href=\"https://graphql.org/\">GraphQL</a> и <a href=\"https://reactjs.org/\">React</a>, которые нём используются.</p>\n<p>Мне удалось сделать желаемый сайт, и сам процесс разработки был достаточно комфортным, но Gatsby, скорее всего, не самый лучший выбор для генерации простого статического сайта, и если вы планируете сделать подобное, попробуйте рассмотреть другие варианты. Можно воспользоваться <a href=\"https://www.11ty.dev/\">Eleventy</a>, который <a href=\"https://twitter.com/pepelsbey/status/1286272737523249152\">рекомендует Вадим Макеев</a> или подобрать другой движок на сайте <a href=\"https://www.staticgen.com/\">StaticGen</a>.</p>\n<p>Из плюсов Gatsby — мне понравилось с помощью GraphQL запрашивать данные из постов. В визуальном интерфейсе можно накликать нужное, а потом выполнить запрос и проверить что он вернул:</p>\n<p><img\n  src=\"/assets/img/articles/jekyll-gatsby/graphql.png\"\n  alt=\"Graphql interface\"\n  loading=\"lazy\"\n/></p>\n<p>Минусов у Gatsby довольно много.</p>\n<p>Первое, с чем я столкнулась — в пост невозможно вставить демки с <a href=\"https://codepen.io/\">Codepen</a>. Обычный код для встраивания просто не работает, я так понимаю, это общая проблема проектов на React. В статьях используется более двухсот демок с кодепена, так что это стало серьёзной проблемой. Для её решения мне пришлось написать <a href=\"https://github.com/yoksel/yoksel.github.io/blob/new-engine/plugins/gatsby-codepen-markup-converter/index.js\">небольшой плагин</a>, который во всех статьях при генерации страницы меняет обычный код для встраивания на код с <code>iframe</code>.</p>\n<p>Следующая проблема: при локальной разработке не отображаются фреймы, лежащие в папке со статикой, и таких демок на сайте тоже довольно много. Чтобы это заработало, в папке <code>public/</code> нужно запускать <a href=\"https://github.com/gatsbyjs/gatsby/issues/17761#issuecomment-533816520\">отдельный сервер</a>.</p>\n<p>В принципе, уже на этом моменте можно было остановиться и подумать, а действительно ли мне нужен именно Gatsby или лучше пойти поискать другой генератор статики. Движок не должен за меня решать что и как я буду вставлять в свои посты. <s>Ёжики плакали, кололись,</s> но я решила довести дело до конца и доделать сайт на выбранном движке.</p>\n<p>Следом передо мной встал вопрос лишнего веса: дефолтная сборка делает для всех страниц статическую версию, но сайт ведёт себя как одностраничное приложение: переходы между страницами происходят с помощью замены контента без перегрузки страниц. Чтобы это происходило максимально быстро, приложение в фоне подгружает контент страниц, куда теоретически может перейти пользователь. Если просто открыть главную страницу, загрузится основной контент страницы и содержимое ссылок, попавших в первый экран.</p>\n<p><img\n  src=\"/assets/img/articles/jekyll-gatsby/main-page-spa.png\"\n  alt=\"Главная страница как SPA\"\n  loading=\"lazy\"\n/></p>\n<p>Вес разметки — около 60kB, + какой-то минимальный JS весом до 10kB, из картинок только мелкие иконки, но в итоге страница весит полмегабайта, всё остальное добавил Gatsby.</p>\n<p>Мотаем вниз, приложение обнаруживает новые ссылки и подгружает их тоже. Теперь страница весит 1.7 мегабайт, и ещё 3 мегабайта загружено по сети:</p>\n<p><img\n  src=\"/assets/img/articles/jekyll-gatsby/main-page-spa-after-scroll.png\"\n  alt=\"Главная страница после прокрутки до конца страницы\"\n  loading=\"lazy\"\n/></p>\n<p>А я просто промотала страницу вниз.</p>\n<p>Цель этих подгрузок — максимально быстро показать следующую страницу, но если точно известно, что на страницах нет ничего тяжёлого, может, и не нужно как-то специально ускорять переход между ними?</p>\n<p>Я воспользовалась плагином <a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-no-javascript/\">gatsby-plugin-no-javascript</a>, который удаляет из разметки все скрипты, которые добавляет туда движок, и это значительно уменьшило количество запросов и вес загружаемых ресурсов:</p>\n<p><img\n  src=\"/assets/img/articles/jekyll-gatsby/main-page-no-spa.png\"\n  alt=\"Главная страница без SPA\"\n  loading=\"lazy\"\n/></p>\n<p>Предзагрузка соседних страниц, на мой взгляд, хорошая идея для интернет-магазина или новостного сайта, где попав на одну страницу, посетитель с высокой степенью вероятности пойдёт гулять по соседним, но для небольшого редко обновляемого сайта это не очень нужно.</p>\n<p>На мой сайт часто заходят посетители из поиска за каким-то конкретным вопросом, и здесь нет необходимости подгружать фоном соседние страницы, потому что они могут никогда не понадобиться. Кроме того, страницы со статьями сами по себе весят немного и ускорять их загрузку подгружая контент заранее, по-моему, просто незачем.</p>\n<p>Статьи с картинками, демками и счётчиками, конечно, будут весить больше чем главная, на которой только текст, но в любом случае теперь к их весу не будет добавляться вес скриптов, которые загружаются на всякий случай и, чаще всего, будут просто не нужны, потому что пользователь нашёл нужное и закрыл страницу.</p>\n<p>Если бы мне не удалось снизить вес страниц до приемлемого, возможно, мне пришлось бы всё-таки переписать сайт ещё раз.</p>\n<p>Про <a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-no-javascript/\">gatsby-plugin-no-javascript</a> ещё нужно помнить следующее: он хорошо убирает лишнее, но вместе с лишним удаляются и все события и хуки из реакт-компонентов. При использовании плагина всю интерактивность нужно вынести во внешние скрипты, так что тут придется выбирать: или реакт, или лёгкий сайт — одновременно не получится.</p>\n<p>Осталась ещё пара небольших проблем. Первая: для управления содержимым тега <code>head</code> предлагается использовать <a href=\"https://www.gatsbyjs.org/tutorial/seo-and-social-sharing-cards-tutorial/\">react-helmet</a>, а он оставляет в коде много лишнего: у каждого тега в шапке будет атрибут <code>data-react-helmet=&quot;true&quot;</code>. Я так понимаю, при использовании с реактом он нужен, чтобы метатеги не двоились, но в статической версии сайта атрибут совершенно ни к чему.</p>\n<p>Решить эту задачу помогла <a href=\"https://twitter.com/mista_k/status/1286182532258697218\">подсказка от Владимира Кузнецова</a>. В <a href=\"https://www.gatsbyjs.org/docs/node-apis/\">Gatsby Node APIs</a> есть метод <code>onPostBuild</code>, который позволяет изменять HTML-файлы после сборки. С его помощью я удалила из кода <code>data-react-helmet=&quot;true&quot;</code> и некоторые другие хвосты, которые туда добавил Gatsby.</p>\n<p>Вторая проблема — куча лишних файлов, которые по-прежнему попадают в сборку, хотя уже нигде не используются: для них я добавила скрипт в <code>package.json</code>, он запускается при деплое и удаляет ненужное.</p>\n<p><strong>Upd от 31.07.2020</strong>: удаление файлов может вызывать проблемы при последующем локальном запуске проекта, поэтому было найдено другое решение. В <code>static/</code> кладется файл <code>.gitignore</code> и в него добавляются все пути, которые нужно игнорировать. После этого в команду для плагина <code>gh-pages</code> нужно добавить <a href=\"https://www.npmjs.com/package/gh-pages#optionsdotfiles\">параметр</a> <code>--dotfiles true</code>, чтобы <code>.gitignore</code> не игнорировался при отправке содержимого в ветку.</p>\n<p>Вот так с помощью напильника <s>и такой-то матери</s> мне удалось довести сайт до желаемого состояния и приемлемого веса. Gatsby может использоваться для генерации простых статических сайтов, но придется приложить некоторые усилия, чтобы сайт на выходе действительно был лёгким и простым, дефолтная сборка этого не делает.</p>\n<p>Возиться с Gatsby было забавно, но когда я в следующий раз захочу переписать сайт, скорее всего, выберу что-то другое.</p>\n","links":[{"href":"https://www.gatsbyjs.org/","text":"Gatsby"},{"href":"https://jekyllrb.com/","text":"Jekyll"},{"href":"https://graphql.org/","text":"GraphQL"},{"href":"https://reactjs.org/","text":"React"},{"href":"https://www.11ty.dev/","text":"Eleventy"},{"href":"https://www.staticgen.com/","text":"StaticGen"},{"href":"https://iainbean.com/posts/2020/your-blog-doesnt-need-a-javascript-framework/","text":"Your blog doesn’t need a JavaScript framework"}],"tags":["tools"],"navItems":[],"date":"2020-07-25"},"posts":[{"date":"2020-09-26","href":"/css-math","text":"Математические функции в CSS","type":"post"},{"date":"2020-09-24","href":"/adaptive-video-with-css-math","text":"Адаптивное видео с помощью встроенных математических функций CSS","type":"post"},{"date":"2020-08-30","href":"/inaccessibility","text":"Недоступность в картинках","type":"post"},{"date":"2020-08-13","href":"/size-units","text":"Единицы размеров в CSS","type":"post"},{"date":"2020-07-27","href":"/color-themes-generator","text":"Генератор цветовых тем","type":"post"},{"date":"2020-07-25","href":"/jekyll-gatsby","text":"Jekyll → Gatsby","type":"post"},{"date":"2018-06-18","href":"/opentype-variable-fonts","text":"Вариативные шрифты","type":"post"},{"date":"2017-08-15","href":"/svg-sizes","text":"Размеры в SVG","type":"post"},{"date":"2017-01-13","href":"/adaptive-pixel-perfect","text":"Адаптивный Pixel Perfect","type":"post"},{"date":"2016-12-20","href":"/a11y-for-logotypes","text":"Логотип не отвечает или временно недоступен","type":"post"},{"date":"2016-11-23","href":"/svg-patterns","text":"SVG-паттерны","type":"post"},{"date":"2016-08-18","href":"/svg-bubble","text":"Мыльные пузыри на SVG","type":"post"},{"date":"2016-08-11","href":"/svg-gradients","text":"SVG-градиенты","type":"post"},{"date":"2016-02-12","href":"/funny-little-console","text":"Весёлая консолька","type":"post"},{"date":"2016-02-04","href":"/svg-masks","text":"SVG-маски","type":"post"},{"date":"2015-07-06","href":"/scroll-snap","text":"Умная прокрутка со Scroll Snap Points","type":"post"},{"date":"2014-08-11","href":"/css-animation-algorithms","text":"CSS-анимации для ротации изображений","type":"post"},{"date":"2014-08-10","href":"/animated-svg-mask","text":"Анимированные SVG-маски","type":"post"},{"date":"2014-07-26","href":"/svg-stroke","text":"Странности обводки в SVG","type":"post"},{"date":"2014-07-08","href":"/svg-preloaders","text":"SVG-прелоадеры","type":"post"},{"date":"2014-07-04","href":"/animated-gradients-2","text":"Анимируем градиенты ещё раз","type":"post"},{"date":"2014-06-15","href":"/background-blend-mode","text":"Background-blend-mode","type":"post"},{"date":"2014-04-17","href":"/svg-decoration","text":"Возможности оформления SVG","type":"post"},{"date":"2014-04-12","href":"/css-and-svg-masks","text":"CSS и SVG маски","type":"post"},{"date":"2014-04-06","href":"/nth-child","text":"Nth-child и nth-of-type","type":"post"},{"date":"2014-03-29","href":"/svg-icons","text":"SVG-иконки","type":"post"},{"date":"2014-03-27","href":"/svg-fill-and-stroke","text":"SVG: заливка и обводка","type":"post"},{"date":"2014-03-23","href":"/svg-path","text":"SVG-path","type":"post"},{"date":"2014-03-22","href":"/svg-groups-use","text":"SVG: группировка и переиспользование элементов","type":"post"},{"date":"2014-03-21","href":"/svg-shapes","text":"SVG-фигуры и трансформации","type":"post"},{"date":"2014-03-19","href":"/svg","text":"SVG","type":"post"},{"date":"2014-03-04","href":"/3d-and-gradients","text":"СSS-градиенты и 3D","type":"post"},{"date":"2014-02-23","href":"/shadowpainter","text":"Рисовалка анимированных теней","type":"post"},{"date":"2014-02-12","href":"/new-patterns","text":"Свежие CSS-паттерны","type":"post"},{"date":"2014-02-07","href":"/css-patterns","text":"CSS-паттерны","type":"post"},{"date":"2014-02-05","href":"/radial-gradients","text":"Радиальные градиенты","type":"post"},{"date":"2014-02-04","href":"/linear-gradients","text":"Линейные градиенты","type":"post"},{"date":"2014-01-25","href":"/tic-tac-toe","text":"Крестики-нолики на CSS","type":"post"},{"date":"2014-01-22","href":"/border-image","text":"Border-image","type":"post"},{"date":"2014-01-19","href":"/digital-watch","text":"Электронные часы на CSS и JS.","type":"post"},{"date":"2014-01-03","href":"/specifity","text":"Сколько весят селекторы?","type":"post"},{"date":"2014-01-02","href":"/unicode","text":"Символы юникода","type":"post"},{"date":"2013-12-22","href":"/content","text":"Свойство content","type":"post"},{"date":"2013-12-16","href":"/animation-for-gradients","text":"Анимируем CSS-градиенты","type":"post"},{"date":"2013-12-09","href":"/text-effects","text":"Текстовые эффекты","type":"post"},{"date":"2013-11-27","href":"/list-like-tree","text":"Древовидный список на CSS","type":"post"},{"date":"2013-11-20","href":"/css-selectors-part2","text":"Css-селекторы, часть 2","type":"post"},{"date":"2013-11-16","href":"/css-selectors","text":"Css-селекторы","type":"post"},{"date":"2013-10-22","href":"/kontekst-nalozheniya","text":"Контекст наложения","type":"post"},{"date":"2013-10-09","href":"/box-sizing","text":"Box-sizing","type":"post"},{"date":"2013-10-09","href":"/dva-sposoba-proshit-e-lement-po-krayu","text":"Два способа \"прошить\" элемент по краю","type":"post"},{"date":"2013-10-06","href":"/tsveta","text":"Цвета в CSS","type":"post"},{"date":"2013-10-04","href":"/fon-pod-strochkami-dobavlyaem-polya","text":"Фон под строчками: добавляем поля","type":"post"},{"date":"2013-09-29","href":"/box-shadow","text":"Box-shadow","type":"post"},{"date":"2013-09-27","href":"/css-figury-lepestok","text":"Css-фигуры: лепесток","type":"post"},{"date":"2013-09-26","href":"/3d-cube","text":"3D-куб","type":"post"},{"date":"2013-09-26","href":"/css-animation","text":"Css Animation","type":"post"},{"date":"2013-09-26","href":"/transform","text":"Transform","type":"post"},{"date":"2013-09-17","href":"/border-radius","text":"Border-radius","type":"post"},{"date":"2013-09-10","href":"/first-letter","text":"First letter","type":"post"},{"date":"2013-09-06","href":"/css-figury","text":"CSS-фигуры","type":"post"},{"date":"2013-09-06","href":"/eti-glaza-naprotiv","text":"Эти глаза напротив","type":"post"},{"date":"2013-09-04","href":"/strelki-s-pomoshh-yu-svojstva-border","text":"Стрелки с помощью свойства border","type":"post"},{"date":"2013-09-03","href":"/flexbox","text":"Flexbox","type":"post"}],"pages":[{"date":"2014-03-19","type":"page","href":"/pages/svg-links","text":"SVG: полезные ссылки"},{"date":"2013-11-16","type":"page","href":"/pages/css-selectors","text":"CSS-селекторы одной таблицей"},{"date":"2013-10-06","type":"page","href":"/pages/tablitsa-imenovanny-h-tsvetov","text":"Таблица именованных цветов"},{"date":"2013-09-27","type":"page","href":"/pages/transform-functions","text":"Функции Transform"},{"date":"2013-09-26","type":"page","href":"/pages/svojstva-animation","text":"Свойства Animation одной таблицей"},{"date":"2013-09-26","type":"page","href":"/pages/svojstva-transform","text":"Свойства Transform"},{"date":"2013-09-04","type":"page","href":"/pages/razny-j-sintaksis-flexbox","text":"Разный синтаксис Flexbox"},{"date":"2013-09-03","type":"page","href":"/pages/svojstva-flexbox","text":"Свойства Flexbox одной таблицей"}],"prevNext":{"prev":{"date":"2018-06-18","href":"/opentype-variable-fonts","text":"Вариативные шрифты","type":"post","id":"previous"},"next":{"date":"2020-07-27","href":"/color-themes-generator","text":"Генератор цветовых тем","type":"post","id":"next"}}},"__N_SSG":true}