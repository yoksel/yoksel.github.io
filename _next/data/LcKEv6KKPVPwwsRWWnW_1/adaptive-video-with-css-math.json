{"pageProps":{"article":{"title":"Адаптивное видео с помощью встроенных математических функций CSS","slug":"adaptive-video-with-css-math","content":"<p>Когда я в твиттере спросила для чего могут быть нужны в CSS <a href=\"https://www.w3.org/TR/css-values-3/#attr-notation\">типизированные значения атрибутов</a>, Вадим Макеев <a href=\"https://twitter.com/pepelsbey/status/1304036385599508480\">предположил</a>, что это было бы очень удобно для адаптивных картинок.</p>\n<p>Но я подумала, что картинки как-то <a href=\"https://codepen.io/yoksel/pen/wvGNrro\">умеют</a> при ресайзе изменять высоту, сохраняя пропорции, а вот фреймы — совсем нет. При этом на адаптивных сайтах важно иметь возможность подгонять под ширину окна любой контент, и видео тоже. Что тут можно сделать?</p>\n<p>Для решения этой задачи существуют <a href=\"https://css-tricks.com/fluid-width-video/\">разные способы</a>: дополнительная обёртка с паддингом или варианты с JS, но простого изящного решения на чистом CSS до сих пор нет. В черновиках W3C для этих целей есть свойство <a href=\"https://drafts.csswg.org/css-sizing-4/#ratios\">aspect-ratio</a>, подробнее про него можно почитать в статье <a href=\"https://www.smashingmagazine.com/2019/03/aspect-ratio-unit-css/\">Designing An Aspect Ratio Unit For CSS</a>, но на данный момент оно <a href=\"https://caniuse.com/mdn-css_properties_aspect-ratio\">не поддерживается</a> ни одним браузером (<a href=\"https://codepen.io/yoksel/pen/WNwPEoV\">демо для потестить</a>).</p>\n<p>Пока копалась в <a href=\"/css-math\">математических функциях</a>, пришло в голову, что <code>aspect-ratio</code> можно попробовать воспроизвести с помощью этих функций и кастомных свойств. Крис Койер <a href=\"https://css-tricks.com/fluid-width-video/\">предлагал</a> использовать кастомные свойства и <code>calc()</code> для вычисления паддинга в способе с обёрткой:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>videoWrapper<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">--aspect-ratio</span><span class=\"token punctuation\">:</span> 3 / 4<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">...</span><span class=\"token punctuation\">></span></span>\n</code></pre></figure>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.videoWrapper</span> <span class=\"token punctuation\">{</span>\n  ...\n  <span class=\"token comment\">/* falls back to 16/9, but otherwise uses ratio from HTML */</span>\n  <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--aspect-ratio<span class=\"token punctuation\">,</span> .5625<span class=\"token punctuation\">)</span> * 100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></figure>\n<p>Но что если получать соотношения сторон из ширины и высоты, а потом на основе этого динамически вычислять высоту самого фрейма?</p>\n<p>Мне потребовалось некоторое время, чтобы понять как написать работающий код. Одной из проблем было то, что, если поделить друг на друга значения с одинаковыми единицами измерения, <code>calc()</code> возвращает <code>0</code>, а не соотношение. Следовательно, чтобы получить соотношение сторон, нужно использовать именно числа без единиц измерения.</p>\n<p>После этого всё стало просто: в атрибутах элемента, который нужно ресайзить, в кастомных свойствах указываются размеры элемента без единиц измерения:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span>\n    <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>560<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>315<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">--width</span><span class=\"token punctuation\">:</span> 560<span class=\"token punctuation\">;</span> <span class=\"token property\">--height</span><span class=\"token punctuation\">:</span> 315<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span>\n    <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">...</span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">></span></span>\n</code></pre></figure>\n<p>А в CSS добавляется немного математики с использованием этих свойств:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.video</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* Находим соотношение сторон */</span>\n  <span class=\"token property\">--index</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--height<span class=\"token punctuation\">)</span> / <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* Добавляем пиксели к высоте */</span>\n  <span class=\"token property\">--height-with-units</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--height<span class=\"token punctuation\">)</span> * 1px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/* Запрещаем фрейму растягиваться шире родителя */</span>\n  <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/* Выбираем минимальное значение из исходной высоты\n    и вычисленной на основе ширины вьюпорта  */</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>100vw * <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--height-with-units<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></figure>\n<div class=\"resizable resizable--x\"><iframe height=\"550\"\n      style=\"width: 100%\"\n      title=\"Adaptive video with custom properties &amp;amp; without padding\"\n      src=\"https://codepen.io/yoksel/embed/oNxmgYq?&default-tab=result\"\n    ></iframe></div>\n\n<p>Посжимайте демо, чтобы увидеть как это работает, или откройте в <a href=\"https://codepen.io/yoksel/pen/oNxmgYq?editors=0100\">отдельной вкладке</a> и попробуйте там.</p>\n<p>Когда фрейм упрётся в края окна и начнёт сужаться вместе с ним, ширина фрейма будет равна ширине вьюпорта (<code>100vw</code>), следовательно, её можно использовать для вычисления высоты. Полученная таким образом высота окажется меньше исходной, и в <code>min()</code> выберется именно она. При растягивании окна высота, вычисленная на основе ширины вьюпорта, станет больше исходной высоты фрейма, поэтому в <code>min()</code> выиграет исходная высота, и фрейм не будет тянуться за пределы исходной высоты.</p>\n<p>Возможно, не для всех случаев ширина фрейма будет равна ширине окна, и в некоторых случаях может потребоваться поменять <code>100vw</code> на другое значение. Например, в демо ширина видео будет <code>calc(100vw - 2rem)</code>, но в рассчётах это не учтено, а поправлять я не стала, чтобы не усложнять понимание логики в <code>min()</code>.</p>\n<p>Также следует помнить, что при использовании препроцессоров они попытаются вычислить <code>min()</code> внутри себя, но не смогут этого сделать из-за несовместимых единиц. Почитать о проблеме можно в статье Аны Тюдор <a href=\"https://css-tricks.com/when-sass-and-new-css-features-collide/\">When Sass and New CSS Features Collide</a>. Чтобы SCSS проигнорировал <code>min()</code>, название функции достаточно написать с заглавной буквы: <code>Min(...)</code> (как сделано в коде демо), а в Less — обернуть кавычками: <code>~&quot;min(...)&quot;</code>.</p>\n<p>Было бы здорово не дублировать размеры в кастомных свойствах, а брать из атрибутов, но в данный момент это не поддерживается <a href=\"https://caniuse.com/mdn-css_types_attr_type-or-unit\">ни одним браузером</a>, хотя в том же <a href=\"https://drafts.csswg.org/css-sizing-4/#ratios\">aspect-ratio</a> предполагается использовать именно значения размеров из атрибутов ширины и высоты.</p>\n<p>Однажды наступит светлое завтра, и у нас появятся <code>aspect-ratio</code> и умная функция <code>attr()</code>. Но уже сейчас можно рассчитывать соотношения сторон фреймов и видеороликов, используя кастомные свойства и встроенные в CSS математических функции, они работают в <a href=\"https://caniuse.com/css-math-functions\">большинстве современных браузеров</a>. Для поддержки старых браузеров всё-таки придётся воспользоваться способом с паддингом или JS.</p>\n","links":[{"href":"https://drafts.csswg.org/css-sizing-4/#ratios","text":"aspect-ratio"},{"href":"https://www.smashingmagazine.com/2019/03/aspect-ratio-unit-css/","text":"Designing An Aspect Ratio Unit For CSS"},{"href":"https://stackoverflow.com/questions/6148012/setting-element-width-based-on-height-via-css","text":"Setting Element Width Based on Height Via CSS"},{"href":"https://stackoverflow.com/questions/1495407/maintain-the-aspect-ratio-of-a-div-with-css","text":"Maintain the aspect ratio of a div with CSS"},{"href":"https://css-tricks.com/fluid-width-video/","text":"Fluid Width Video"},{"href":"https://www.w3.org/TR/css-values-4/#calc-notation","text":"Mathematical Expressions: calc(), min(), max(), and clamp()"},{"href":"https://www.w3.org/TR/css-values-3/#attr-notation","text":"Attribute References: attr()"},{"href":"https://developer.mozilla.org/en-US/docs/Web/CSS/attr","text":"attr()"},{"href":"https://css-tricks.com/when-sass-and-new-css-features-collide/","text":"When Sass and New CSS Features Collide"},{"href":"/size-units/#relative-units","text":"Единицы размеров в CSS"},{"href":"/css-math","text":"Математические функции в CSS"}],"tags":["css-math"],"navItems":[],"date":"2020-09-24"},"posts":[{"date":"2020-09-26","href":"/css-math","text":"Математические функции в CSS","type":"post"},{"date":"2020-09-24","href":"/adaptive-video-with-css-math","text":"Адаптивное видео с помощью встроенных математических функций CSS","type":"post"},{"date":"2020-08-30","href":"/inaccessibility","text":"Недоступность в картинках","type":"post"},{"date":"2020-08-13","href":"/size-units","text":"Единицы размеров в CSS","type":"post"},{"date":"2020-07-27","href":"/color-themes-generator","text":"Генератор цветовых тем","type":"post"},{"date":"2020-07-25","href":"/jekyll-gatsby","text":"Jekyll → Gatsby","type":"post"},{"date":"2018-06-18","href":"/opentype-variable-fonts","text":"Вариативные шрифты","type":"post"},{"date":"2017-08-15","href":"/svg-sizes","text":"Размеры в SVG","type":"post"},{"date":"2017-01-13","href":"/adaptive-pixel-perfect","text":"Адаптивный Pixel Perfect","type":"post"},{"date":"2016-12-20","href":"/a11y-for-logotypes","text":"Логотип не отвечает или временно недоступен","type":"post"},{"date":"2016-11-23","href":"/svg-patterns","text":"SVG-паттерны","type":"post"},{"date":"2016-08-18","href":"/svg-bubble","text":"Мыльные пузыри на SVG","type":"post"},{"date":"2016-08-11","href":"/svg-gradients","text":"SVG-градиенты","type":"post"},{"date":"2016-02-12","href":"/funny-little-console","text":"Весёлая консолька","type":"post"},{"date":"2016-02-04","href":"/svg-masks","text":"SVG-маски","type":"post"},{"date":"2015-07-06","href":"/scroll-snap","text":"Умная прокрутка со Scroll Snap Points","type":"post"},{"date":"2014-08-11","href":"/css-animation-algorithms","text":"CSS-анимации для ротации изображений","type":"post"},{"date":"2014-08-10","href":"/animated-svg-mask","text":"Анимированные SVG-маски","type":"post"},{"date":"2014-07-26","href":"/svg-stroke","text":"Странности обводки в SVG","type":"post"},{"date":"2014-07-08","href":"/svg-preloaders","text":"SVG-прелоадеры","type":"post"},{"date":"2014-07-04","href":"/animated-gradients-2","text":"Анимируем градиенты ещё раз","type":"post"},{"date":"2014-06-15","href":"/background-blend-mode","text":"Background-blend-mode","type":"post"},{"date":"2014-04-17","href":"/svg-decoration","text":"Возможности оформления SVG","type":"post"},{"date":"2014-04-12","href":"/css-and-svg-masks","text":"CSS и SVG маски","type":"post"},{"date":"2014-04-06","href":"/nth-child","text":"Nth-child и nth-of-type","type":"post"},{"date":"2014-03-29","href":"/svg-icons","text":"SVG-иконки","type":"post"},{"date":"2014-03-27","href":"/svg-fill-and-stroke","text":"SVG: заливка и обводка","type":"post"},{"date":"2014-03-23","href":"/svg-path","text":"SVG-path","type":"post"},{"date":"2014-03-22","href":"/svg-groups-use","text":"SVG: группировка и переиспользование элементов","type":"post"},{"date":"2014-03-21","href":"/svg-shapes","text":"SVG-фигуры и трансформации","type":"post"},{"date":"2014-03-19","href":"/svg","text":"SVG","type":"post"},{"date":"2014-03-04","href":"/3d-and-gradients","text":"СSS-градиенты и 3D","type":"post"},{"date":"2014-02-23","href":"/shadowpainter","text":"Рисовалка анимированных теней","type":"post"},{"date":"2014-02-12","href":"/new-patterns","text":"Свежие CSS-паттерны","type":"post"},{"date":"2014-02-07","href":"/css-patterns","text":"CSS-паттерны","type":"post"},{"date":"2014-02-05","href":"/radial-gradients","text":"Радиальные градиенты","type":"post"},{"date":"2014-02-04","href":"/linear-gradients","text":"Линейные градиенты","type":"post"},{"date":"2014-01-25","href":"/tic-tac-toe","text":"Крестики-нолики на CSS","type":"post"},{"date":"2014-01-22","href":"/border-image","text":"Border-image","type":"post"},{"date":"2014-01-19","href":"/digital-watch","text":"Электронные часы на CSS и JS.","type":"post"},{"date":"2014-01-03","href":"/specifity","text":"Сколько весят селекторы?","type":"post"},{"date":"2014-01-02","href":"/unicode","text":"Символы юникода","type":"post"},{"date":"2013-12-22","href":"/content","text":"Свойство content","type":"post"},{"date":"2013-12-16","href":"/animation-for-gradients","text":"Анимируем CSS-градиенты","type":"post"},{"date":"2013-12-09","href":"/text-effects","text":"Текстовые эффекты","type":"post"},{"date":"2013-11-27","href":"/list-like-tree","text":"Древовидный список на CSS","type":"post"},{"date":"2013-11-20","href":"/css-selectors-part2","text":"Css-селекторы, часть 2","type":"post"},{"date":"2013-11-16","href":"/css-selectors","text":"Css-селекторы","type":"post"},{"date":"2013-10-22","href":"/kontekst-nalozheniya","text":"Контекст наложения","type":"post"},{"date":"2013-10-09","href":"/box-sizing","text":"Box-sizing","type":"post"},{"date":"2013-10-09","href":"/dva-sposoba-proshit-e-lement-po-krayu","text":"Два способа \"прошить\" элемент по краю","type":"post"},{"date":"2013-10-06","href":"/tsveta","text":"Цвета в CSS","type":"post"},{"date":"2013-10-04","href":"/fon-pod-strochkami-dobavlyaem-polya","text":"Фон под строчками: добавляем поля","type":"post"},{"date":"2013-09-29","href":"/box-shadow","text":"Box-shadow","type":"post"},{"date":"2013-09-27","href":"/css-figury-lepestok","text":"Css-фигуры: лепесток","type":"post"},{"date":"2013-09-26","href":"/3d-cube","text":"3D-куб","type":"post"},{"date":"2013-09-26","href":"/css-animation","text":"Css Animation","type":"post"},{"date":"2013-09-26","href":"/transform","text":"Transform","type":"post"},{"date":"2013-09-17","href":"/border-radius","text":"Border-radius","type":"post"},{"date":"2013-09-10","href":"/first-letter","text":"First letter","type":"post"},{"date":"2013-09-06","href":"/css-figury","text":"CSS-фигуры","type":"post"},{"date":"2013-09-06","href":"/eti-glaza-naprotiv","text":"Эти глаза напротив","type":"post"},{"date":"2013-09-04","href":"/strelki-s-pomoshh-yu-svojstva-border","text":"Стрелки с помощью свойства border","type":"post"},{"date":"2013-09-03","href":"/flexbox","text":"Flexbox","type":"post"}],"pages":[{"date":"2014-03-19","type":"page","href":"/pages/svg-links","text":"SVG: полезные ссылки"},{"date":"2013-11-16","type":"page","href":"/pages/css-selectors","text":"CSS-селекторы одной таблицей"},{"date":"2013-10-06","type":"page","href":"/pages/tablitsa-imenovanny-h-tsvetov","text":"Таблица именованных цветов"},{"date":"2013-09-27","type":"page","href":"/pages/transform-functions","text":"Функции Transform"},{"date":"2013-09-26","type":"page","href":"/pages/svojstva-animation","text":"Свойства Animation одной таблицей"},{"date":"2013-09-26","type":"page","href":"/pages/svojstva-transform","text":"Свойства Transform"},{"date":"2013-09-04","type":"page","href":"/pages/razny-j-sintaksis-flexbox","text":"Разный синтаксис Flexbox"},{"date":"2013-09-03","type":"page","href":"/pages/svojstva-flexbox","text":"Свойства Flexbox одной таблицей"}],"prevNext":{"prev":{"date":"2020-08-30","href":"/inaccessibility","text":"Недоступность в картинках","type":"post","id":"previous"},"next":{"date":"2020-09-26","href":"/css-math","text":"Математические функции в CSS","type":"post","id":"next"}}},"__N_SSG":true}