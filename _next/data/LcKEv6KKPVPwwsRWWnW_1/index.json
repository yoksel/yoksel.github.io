{"pageProps":{"posts":[{"excerpt":"<p>В CSS есть <a href=\"https://www.w3.org/TR/css-values-4/#calc-notation\">математические функции</a>, их всего четыре: <code>min()</code>, <code>max()</code>, <code>clamp()</code> и <code>calc()</code>.</p>\n<p>Математика в каком-то виде есть и в препроцессорах, например, в SCSS есть <code>min()</code>, <code>max()</code> и <code>clamp()</code>, в Less — <code>min()</code> и <code>max()</code>, но есть пара существенных отличий. Во-первых, в препроцессорах всё рассчитывается один раз при компиляции, и в итоговом файле всегда будут фиксированные значения. А во-вторых, в препроцессорных функциях нельзя сочетать разные единицы измерения.</p>\n","date":"2020-09-26","href":"/css-math","text":"Математические функции в CSS","type":"post"},{"excerpt":"<p>Когда я в твиттере спросила для чего могут быть нужны в CSS <a href=\"https://www.w3.org/TR/css-values-3/#attr-notation\">типизированные значения атрибутов</a>, Вадим Макеев <a href=\"https://twitter.com/pepelsbey/status/1304036385599508480\">предположил</a>, что это было бы очень удобно для адаптивных картинок.</p>\n<p>Но я подумала, что картинки как-то <a href=\"https://codepen.io/yoksel/pen/wvGNrro\">умеют</a> при ресайзе изменять высоту, сохраняя пропорции, а вот фреймы — совсем нет. При этом на адаптивных сайтах важно иметь возможность подгонять под ширину окна любой контент, и видео тоже. Что тут можно сделать?</p>\n","date":"2020-09-24","href":"/adaptive-video-with-css-math","text":"Адаптивное видео с помощью встроенных математических функций CSS","type":"post"},{"excerpt":"<p>Когда мы говорим про доступность, мне часто не хватает визуальной составляющей. «Недоступно для скринридера» — как это выглядит?</p>\n<p>Когда есть возможность запустить программу экранного доступа и увидеть всё своими глазами, это достаточно освежающий опыт, после которого начинаешь гораздо аккуратнее выбирать теги. Мне хотелось бы, чтобы это попробовал каждый, кто имеет дело с вёрсткой, но я подозреваю, что, хотя многие слышали о доступности и скринридерах, запускать читалку пробовали далеко не все — потому что надо не только найти где включается скринридер, но и разобраться в непривычном и достаточно неинтуитивном интерфейсе.</p>\n","date":"2020-08-30","href":"/inaccessibility","text":"Недоступность в картинках","type":"post"},{"excerpt":"<p>В CSS существует множество единиц измерения. Обычно мы используем единицы размеров, но также есть единицы для углов — например, <code>deg</code> и <code>turn</code>, единицы времени — <code>s</code> и <code>ms</code>, единицы плотности экрана — например, <code>dpi</code> и <code>dppx</code> и другие.</p>\n<p>Здесь будут рассматриваться только единицы размеров, которыми мы пользуемся чаще всего. Подробное описание можно найти в спецификации W3C <a href=\"https://www.w3.org/TR/css-values-4/#lengths\">Distance Units: the &lt;length&gt; type</a>.</p>\n","date":"2020-08-13","href":"/size-units","text":"Единицы размеров в CSS","type":"post"},{"excerpt":"<p>В конце марта я выпустила инструмент для генерации цветовых тем из CSS/SCSS/Less-переменных — <a href=\"https://yoksel.github.io/tema/\">Tema</a>. Он может быть полезен для карманных проектов без фиксированного дизайна, когда цвета подбираются прямо в&nbsp;процессе разработки. Я немного расскажу про историю появления и&nbsp;покажу как его можно использовать.</p>\n","date":"2020-07-27","href":"/color-themes-generator","text":"Генератор цветовых тем","type":"post"},{"excerpt":"<p>На днях сайт обновил движок. Последний раз это случалось в <a href=\"/jekyll-vagrant\">2013-м</a> — тогда сайт переехал с Wordpress на <a href=\"https://jekyllrb.com/\">Jekyll</a>, сейчас — с Jekyll на <a href=\"https://www.gatsbyjs.org/\">Gatsby</a>.</p>\n<p>Мои вопросы про Gatsby вызвали довольно оживленную дискуссию в твиттере (<a href=\"https://twitter.com/yoksel/status/1285960534261739526\">1</a>, <a href=\"https://twitter.com/pepelsbey/status/1286232509915725824\">2</a>), поэтому я решила отдельно рассказать про смену движка и опыт с Gatsby.</p>\n","date":"2020-07-25","href":"/jekyll-gatsby","text":"Jekyll → Gatsby","type":"post"},{"excerpt":"<p>Вариативные (или настраиваемые) шрифты — это, без преувеличения, новая страница в веб-типографике. Настраиваемые шрифты стали возможны благодаря совместным усилиям компаний Microsoft, Apple, Adobe и Google. Концепция была впервые представлена в сентябре 2016 года, вместе с релизом <a href=\"https://docs.microsoft.com/ru-ru/typography/opentype/spec/\">OpenType 1.8</a>.</p>\n","date":"2018-06-18","href":"/opentype-variable-fonts","text":"Вариативные шрифты","type":"post"},{"excerpt":"<p>Управление размерами — тема важная, и чтобы максимально использовать возможности SVG, нужно хорошо понимать как всё работает.</p>\n","date":"2017-08-15","href":"/svg-sizes","text":"Размеры в SVG","type":"post"},{"excerpt":"<p>Начну издалека. Не так давно я присоединилась к <a href=\"https://htmlacademy.ru\">HTML Академии</a> в качестве наставника. Помимо того, что наставничество помогает упорядочить свои знания, оно удивительным образом стимулирует разработку разных полезных штук, потому что в процессе появляются интересные задачи, решение которых можно удобно автоматизировать.</p>\n","date":"2017-01-13","href":"/adaptive-pixel-perfect","text":"Адаптивный Pixel Perfect","type":"post"},{"excerpt":"<p>Заинтересовалась вопросом: как лучше всего верстать логотипы на сайте? Как правильно и почему? Картинкой или фоном? Как логотип будет выглядеть при печати? Как обеспечить доступность для скринридеров и как сделать подсказки для поисковиков? </p>\n","date":"2016-12-20","href":"/a11y-for-logotypes","text":"Логотип не отвечает или временно недоступен","type":"post"},{"excerpt":"<p><code>pattern</code> — это элемент, который можно использовать в качеcтве заливки или обводки. Содержимое паттерна может быть самым разным: фигуры, символы, текст или растровые изображения — в любых сочетаниях.</p>\n","date":"2016-11-23","href":"/svg-patterns","text":"SVG-паттерны","type":"post"},{"excerpt":"<p>Честно говоря, пузыри у меня получились почти случайно, когда мне потребовалось как следует изучить градиенты и я экспериментировала с их возможностями. И я сама до сих пор не очень понимаю, как так получилось, используя только SVG — векторный формат, — сделать такой невесомый мыльный пузырь. </p>\n","date":"2016-08-18","href":"/svg-bubble","text":"Мыльные пузыри на SVG","type":"post"},{"excerpt":"<p>В SVG не работают привычные CSS-фоны, для заливок здесь есть свои конструкции: для градиентов это элементы <code>linearGradient</code> и <code>radialGradient</code> — линейный и радиальный градиенты соответственно.</p>\n","date":"2016-08-11","href":"/svg-gradients","text":"SVG-градиенты","type":"post"},{"excerpt":"<p>Недавно мне пришлось отлаживать очень капризный скрипт, в котором, по ощущениям, происходили какие-то паранормальные явления. Чтобы найти проблему, понадобилось вывести в консоль браузера большое количество отладочной информации. </p>\n","date":"2016-02-12","href":"/funny-little-console","text":"Весёлая консолька","type":"post"},{"excerpt":"<p>SVG-маски — это очень богатая тема. В SVG есть два способа обрезать один элемент с помощью другого: это <b>clip-path</b> и <b>mask</b>. <b>Clip-path</b> для обрезки использует только контуры фигур, игнорируя заливки и обводки, с <b>масками</b> всё гораздо интереснее: в них учитываются и заливки, и обводки, и яркость содержимого.</p>\n","date":"2016-02-04","href":"/svg-masks","text":"SVG-маски","type":"post"},{"excerpt":"<p>В Firefox начиная с 39-й версии появились интересные CSS-свойства, которые позволяют управлять поведением прокручиваемого контента.</p>\n","date":"2015-07-06","href":"/scroll-snap","text":"Умная прокрутка со Scroll Snap Points","type":"post"},{"excerpt":"<p>В процессе экспериментов с <a href=\"/animated-svg-mask/\">анимированными SVG-масками</a>, мне пришлось как следует разобраться с алгоритмами CSS-анимаций. </p>\n","date":"2014-08-11","href":"/css-animation-algorithms","text":"CSS-анимации для ротации изображений","type":"post"},{"excerpt":"<p>В <a href=\"/svg-stroke\">прошлой статье</a> я рассматривала странности SVG-обводки, а также возможность сделать анимированные маски.</p>\n<p>Так как трансформации в масках не анимируются в Firefox (31-я версия на момент написания статьи), я продолжила эксперименты с обводками. </p>\n","date":"2014-08-10","href":"/animated-svg-mask","text":"Анимированные SVG-маски","type":"post"},{"excerpt":"<p>Экспериментируя с SVG можно обнаружить много странных моментов. Получить странное при манипуляциях с масштабированием ещё как-то ожидаемо, но внезапно сюрпризы преподнесло свойство <code>stroke-width</code>.</p>\n","date":"2014-07-26","href":"/svg-stroke","text":"Странности обводки в SVG","type":"post"},{"excerpt":"<p>В поисках что бы ещё такого сделать чтобы ездило, я захотела сделать прелоадеры на SVG.</p>\n<p>Получилось здорово, хотя результат пока не сильно подходит для использования в реальной жизни.</p>\n","date":"2014-07-08","href":"/svg-preloaders","text":"SVG-прелоадеры","type":"post"},{"excerpt":"<p>Предыдущее <a href=\"/animation-for-gradients/\">решение</a> мне всё-таки кажется несколько избыточным, а тут пришел в голову ещё один способ, на этот раз — с псевдоэлементами и <code>opacity</code>.</p>\n","date":"2014-07-04","href":"/animated-gradients-2","text":"Анимируем градиенты ещё раз","type":"post"},{"excerpt":"<p>На этой неделе в <a href=\"https://developer.mozilla.org/en-US/Firefox/Releases/30\">Firefox 30</a> было включено по умолчанию свойство <code>background-blend-mode</code>. Таким образом, Firefox стал третьим браузером, поддерживающим это свойство (два других — Opera и Chrome). Safari будет поддерживать это свойство в следующей версии, про планы IE мне ничего найти не удалось.</p>\n","date":"2014-06-15","href":"/background-blend-mode","text":"Background-blend-mode","type":"post"},{"excerpt":"<p>Внешний вид SVG-элементам можно задавать как с помощью CSS, так и с помощью SVG-фильтров, градиентов и паттернов — их можно прописывать элементам прямо в коде либо задавать также через CSS.</p>\n<p>Стили и скрипты можно задавать внутри SVG-файла, но если мы хотим, чтобы одно и то же изображение в разных условиях выглядело по-разному — стили внутри файла не годятся &mdash; нужно, чтобы векторное содержимое было доступно для внешних стилей.</p>\n","date":"2014-04-17","href":"/svg-decoration","text":"Возможности оформления SVG","type":"post"},{"excerpt":"<p>Есть несколько способов обрезать элемент по маске. Одни поддерживаются всеми современными браузерами, другие поддерживаются очень плохо, и пользоваться ими ещё нельзя. В некоторых способах маской может быть текст.</p>","date":"2014-04-12","href":"/css-and-svg-masks","text":"CSS и SVG маски","type":"post"},{"excerpt":"<p><code>:nth-child</code> — один из моих самых любимых селекторов, потому что с помощью него можно <s>делать клевые разноцветные штуки</s> собирать элементы списка в группы произвольной длины и делать с ними разные интересные вещи: от полосатых таблиц до целых разноцветных дизайнов, и все это без необходимости задавать дополнительные классы или как-то менять разметку. </p>\n","date":"2014-04-06","href":"/nth-child","text":"Nth-child и nth-of-type","type":"post"},{"excerpt":"<p>Адаптивный дизайн — популярная тема. Экраны давно вышли за пределы стандартных разрешений, и сайты могут смотреть и на девайсах размером с ладонь, и на больших мониторах. Сайт должен одинаково хорошо выглядеть вне зависимости от размера устройства и плотности пикселей.\nДля адаптации дизайна и контента существует много разных методик и технологий. Векторная графика, SVG, по-моему, одна из самых интересных тем в этом направлении.</p>\n","date":"2014-03-29","href":"/svg-icons","text":"SVG-иконки","type":"post"},{"excerpt":"<p>В SVG заливка и обводка имеют много разных интересных опций, которые предоставляют возможности гораздо шире того, что есть в CSS.</p>\n","date":"2014-03-27","href":"/svg-fill-and-stroke","text":"SVG: заливка и обводка","type":"post"},{"excerpt":"<p><code>path</code> — более сложный вариант линии. С его помощью можно нарисовать <code>line</code>, <code>polyline</code>, <code>polygon</code>, <code>circle</code> и <code>rect</code>:</p>\n<iframe height=\"700\"\n      style=\"width: 100%\"\n      title=\"Try to make simple shapes with path\"\n      src=\"https://codepen.io/yoksel/embed/Jbofr?&default-tab=result\"\n    ></iframe>\n\n<p>В отличие от <code>polygon</code>, фигура не замыкается сама по себе, но это можно сделать с помощью дополнительного параметра.</p>\n","date":"2014-03-23","href":"/svg-path","text":"SVG-path","type":"post"},{"excerpt":"<p>SVG-фигуры можно группировать, чтобы удобно структурировать файл. Для этих целей существует несколько тегов: <nobr><code>g</code></nobr>, <code>defs</code> и <code>symbol</code>. Элементы, группы элементов и символы можно использовать повторно. </p>\n","date":"2014-03-22","href":"/svg-groups-use","text":"SVG: группировка и переиспользование элементов","type":"post"},{"excerpt":"<p><a href=\"/svg\">&larr; Начало про SVG</a></p>\n<p>Писать SVG руками довольно просто. Используем фигуры: <code>rect</code>, <code>polygon</code>, <code>circle</code>, <code>ellipse</code>, а также <code>line</code>, <code>polyline</code> и <code>path</code>.\nЗадаем выбранную фигуру, определяем её размеры и координаты, затем добавляем фон и обводку.</p>\n","date":"2014-03-21","href":"/svg-shapes","text":"SVG-фигуры и трансформации","type":"post"},{"excerpt":"<p>SVG — это формат векторных изображений, основанный на XML.</p>\n<p>Спецификация: <a href=\"http://www.w3.org/TR/SVG/\">w3.org/TR/SVG</a></p>\n<p>SVG имеет массу преимуществ перед растровыми изображениями:</p>\n","date":"2014-03-19","href":"/svg","text":"SVG","type":"post"},{"excerpt":"<p>Сочетание CSS-анимации, трансформаций и градиентов может дать совершенно удивительные результаты. Не уверена, что подобное можно использовать в реальных проектах, но выглядит довольно эффектно.</p>\n","date":"2014-03-04","href":"/3d-and-gradients","text":"СSS-градиенты и 3D","type":"post"},{"excerpt":"<p>В процессе изучения JS решила написать рисовалку CSS-анимаций на основе <code>box-shadow</code>. Получила море удовольствия и узнала много нового.</p>\n","date":"2014-02-23","href":"/shadowpainter","text":"Рисовалка анимированных теней","type":"post"},{"excerpt":"<p>Неожиданно увлеклась темой CSS-паттернов и сделала несколько новых.\nМеня интересовало: можно ли сделать плавные волны и спирали, получится ли имитировать узор из цветной бумаги и как сделать почтовую марку не используя изображения.</p>\n","date":"2014-02-12","href":"/new-patterns","text":"Свежие CSS-паттерны","type":"post"},{"excerpt":"<p>Возможности управления фонами через CSS в cочетании с градиентами дают совершенно невероятные возможности. Градиентами можно нарисовать почти всё что угодно от простых клеточек, полосочек и кружочков до достаточно сложных узоров. Играться можно до бесконечности.</p>\n","date":"2014-02-07","href":"/css-patterns","text":"CSS-паттерны","type":"post"},{"excerpt":"<p>Радиальные градиенты отрисовываются иначе, чем линейные. Если цвета линейных располагаются перпендикулярно линии, задающей направление, то в радиальных цвета расходятся от заданного центра, а градиент может принимать форму круга или эллипса.</p>\n<p>Спецификация: <a href=\"http://www.w3.org/TR/css3-images/#radial-gradients\">w3.org/TR/css3-images/#radial-gradients</a>.</p>\n","date":"2014-02-05","href":"/radial-gradients","text":"Радиальные градиенты","type":"post"},{"excerpt":"<p>CSS-градиенты позволяют сделать фон из двух и более цветов, плавно переходящих из одного в другой.\nОни с нами уже достаточно давно, и имеют довольно <a href=\"http://caniuse.com/#feat=css-gradients\">неплохую поддержку браузерами</a>. Большинство современных браузеров понимает их без префиксов, для IE9 и старше есть <a href=\"http://msdn.microsoft.com/en-us/library/ms532997(v=vs.85).aspx\">Gradient Filter</a>, также для IE9 можно использовать SVG.</p>\n<p>Спецификация: <a href=\"http://www.w3.org/TR/css3-images/#gradients\">w3.org/TR/css3-images/#gradients</a>.</p>\n","date":"2014-02-04","href":"/linear-gradients","text":"Линейные градиенты","type":"post"},{"excerpt":"<p>Довольно странный вариант игры. </p>\n","date":"2014-01-25","href":"/tic-tac-toe","text":"Крестики-нолики на CSS","type":"post"},{"excerpt":"<p><code>Border-image</code> — свойство, которое позволяет задавать фоновое изображение для рамки элемента. Свойство  заполняет рамку заданной картинкой, распределяя части изображения таким образом, чтобы угловые части находились в углах рамки, а пространства между ними заполнялись остальными частями изображения.</p>\n<p>Спецификация: <a href=\"http://www.w3.org/TR/css3-background/#border-images\">w3.org/TR/css3-background/#border-images</a>.</p>\n<p>Это свойство позволяет легко делать невероятные штуки, для которых раньше требовалось от 3-х до 8-ми картинок и манипуляции с разметкой.</p>\n","date":"2014-01-22","href":"/border-image","text":"Border-image","type":"post"},{"excerpt":"<p>С познавательно-развлекательной целью сделала электронные часы.</p>\n<p>Показывают текущее время, меняют цвет, умеют подгоняться под размер окна браузера.</p>\n","date":"2014-01-19","href":"/digital-watch","text":"Электронные часы на CSS и JS.","type":"post"},{"excerpt":"<p>Все CSS-селекторы имеют свой вес, который определяет как взаимодействуют одинаковые свойства, заданные в разных местах кода одному и тому же элементу.</p>\n","date":"2014-01-03","href":"/specifity","text":"Сколько весят селекторы?","type":"post"},{"excerpt":"<p>Заинтересовалась юникодом, захотела посмотреть какие символы в нем есть, и как-то сама собой получилась страница, на которой можно увидеть большинство символов юникода: <a href=\"https://yoksel.github.io/unicode-table/\">yoksel.github.io/unicode-table</a>.</p>\n","date":"2014-01-02","href":"/unicode","text":"Символы юникода","type":"post"},{"excerpt":"<p>С помощью CSS на страницу можно добавить элементы, несуществующие в разметке страницы. Это делается с помощью псевдоэлементов <code>:before</code> и <code>:after</code>, но не менее важную роль в этом играет свойство <code>content</code>.</p>\n","date":"2013-12-22","href":"/content","text":"Свойство content","type":"post"},{"excerpt":"<p>Как известно, градиенты не любят анимироваться.</p>\n","date":"2013-12-16","href":"/animation-for-gradients","text":"Анимируем CSS-градиенты","type":"post"},{"excerpt":"<p>В посте представлены некоторые эффекты на основе <code>text-shadow</code>.</p>\n<p><code>text-shadow</code> — это свойство, описывающее тень, отбрасываемую текстом. </p>\n","date":"2013-12-09","href":"/text-effects","text":"Текстовые эффекты","type":"post"},{"excerpt":"<p>Как-то мне потребовалось сделать иерархическое представление структуры проекта, для реализации был выбран CSS.</p>\n","date":"2013-11-27","href":"/list-like-tree","text":"Древовидный список на CSS","type":"post"},{"excerpt":"<p>Начало тут: <a href=\"/css-selectors\">Css-селекторы</a>.</p>\n","date":"2013-11-20","href":"/css-selectors-part2","text":"Css-селекторы, часть 2","type":"post"},{"excerpt":"<p>В CSS есть достаточно способов обратиться к нужным элементам. <br/>\nВ каждой новой спецификацией CSS добавлялось что-то новое, и теперь у нас есть много самых разных селекторов. </p>\n","date":"2013-11-16","href":"/css-selectors","text":"Css-селекторы","type":"post"},{"excerpt":"<p>Если с помощью <code>z-index</code> изменять порядок наложения элементов друг на друга, в некоторых случаях могут возникать проблемы из-за свойств, создающих новый контекст наложения.</p>\n","date":"2013-10-22","href":"/kontekst-nalozheniya","text":"Контекст наложения","type":"post"},{"excerpt":"<p>Свойство <code>box-sizing</code> позволяет указать как ведут себя размеры блока при наличии рамок и полей.\nПрименяются к элементам, у которых заданы размеры.</p>\n","date":"2013-10-09","href":"/box-sizing","text":"Box-sizing","type":"post"},{"excerpt":"<p>Есть два способа сделать эффект, как будто элемент прострочили на швейной машинке: используя псевдоэлементы и с помощью <code>outline</code>.</p>\n","date":"2013-10-09","href":"/dva-sposoba-proshit-e-lement-po-krayu","text":"Два способа \"прошить\" элемент по краю","type":"post"},{"excerpt":"<p>Мне нравится возможность задавать цвета в коде несколькими разными способами, в зависимости от цели использования. Всего таких способов 7.</p>\n<p>Спецификация тут: <a href=\"http://www.w3.org/TR/css3-color/\">w3.org/TR/css3-color/</a>.</p>\n<p>Итак, способы:</p>\n","date":"2013-10-06","href":"/tsveta","text":"Цвета в CSS","type":"post"},{"excerpt":"<p>Проблема: если задать фон строчным элементам, получается вот так</p>\n","date":"2013-10-04","href":"/fon-pod-strochkami-dobavlyaem-polya","text":"Фон под строчками: добавляем поля","type":"post"},{"excerpt":"<p>Свойство <code>box-shadow</code> позволяет добавить элементам одну или несколько теней.</p>\n","date":"2013-09-29","href":"/box-shadow","text":"Box-shadow","type":"post"},{"excerpt":"<p>Из одного <code>div</code> с помощью <code>border-radius</code> легко можно сделать лепесток:</p>\n","date":"2013-09-27","href":"/css-figury-lepestok","text":"Css-фигуры: лепесток","type":"post"},{"excerpt":"<p>Мне давно хотелось разобраться с 3D фигурами в Css и сделать вращающийся куб. Спеки прочитаны, можно приступать (почитать про <a href=\"/transform/\">трансформы</a> и про <a href=\"/css-animation/\">анимации</a>).</p>\n","date":"2013-09-26","href":"/3d-cube","text":"3D-куб","type":"post"},{"excerpt":"<section>Свойство <code>animation</code> позволяет анимировать элементы страницы.\n\n<p>Можно управлять длительностью анимации, повторением, направлением, типом движения и шагами.\nАнимировать можно любые элементы, в том числе псевдо-элементы.</p>\n","date":"2013-09-26","href":"/css-animation","text":"Css Animation","type":"post"},{"excerpt":"<section>CSS-свойство <code>transform</code> позволяет трансформировать элементы, в том числе в трехмерном пространстве.","date":"2013-09-26","href":"/transform","text":"Transform","type":"post"},{"excerpt":"<p><strong>Border-radius</strong> — это свойство, добавляющее элементам скругление углов.</p>\n<p>Скругление можно задать для всего элемента сразу:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n</code></pre></figure>\n<p>или разным углам поотдельности, например:</p>\n<figure aria-label=\"Пример кода\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">border-top-left-radius</span><span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n<span class=\"token property\">border-top-right-radius</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n</code></pre></figure>\n<p>Возможные значения: числа или проценты.</p>\n","date":"2013-09-17","href":"/border-radius","text":"Border-radius","type":"post"},{"excerpt":"<p><code>:first-letter</code> — это псевдоэлемент, представляющий первый символ в тексте.</p>\n<p>Работает только для блочных элементов.</p>\n<p>К <code>:first-letter</code> применяется ограниченное количество свойств:</p>\n","date":"2013-09-10","href":"/first-letter","text":"First letter","type":"post"},{"excerpt":"<p>Фигуры с помощью CSS — тема богатая и интересная. Помимо базовых фигур, используя тени и псевдоэлементы можно сделать много всякого другого, причем некоторые фигуры можно сделать двумя и более способами.</p>\n","date":"2013-09-06","href":"/css-figury","text":"CSS-фигуры","type":"post"},{"excerpt":"<p>Тени, градиенты, скругленные углы.</p>\n","date":"2013-09-06","href":"/eti-glaza-naprotiv","text":"Эти глаза напротив","type":"post"},{"excerpt":"<p>С помощью <code>border</code> можно легко делать стрелочки разного размера и в разных направлениях.</p>\n<p>Чтобы понять общий принцип, возьмем див нулевого размера, сделаем ему толстую рамку и раскрасим её в разные цвета: </p>\n","date":"2013-09-04","href":"/strelki-s-pomoshh-yu-svojstva-border","text":"Стрелки с помощью свойства border","type":"post"},{"excerpt":"<p><strong>Flexbox</strong> — это новый способ располагать блоки на странице. Это технология, созданная именно для раскладки элементов, в отличие от float-ов. С помощью <strong>Flexbox</strong> можно легко выравнивать элементы по горизонтали и по вертикали, менять направление и порядок отображение элементов, растягивать блоки на всю высоту родителя или прибивать их к нижнему краю.</p>\n","date":"2013-09-03","href":"/flexbox","text":"Flexbox","type":"post"}],"pages":[{"date":"2014-03-19","type":"page","href":"/pages/svg-links","text":"SVG: полезные ссылки"},{"date":"2013-11-16","type":"page","href":"/pages/css-selectors","text":"CSS-селекторы одной таблицей"},{"date":"2013-10-06","type":"page","href":"/pages/tablitsa-imenovanny-h-tsvetov","text":"Таблица именованных цветов"},{"date":"2013-09-27","type":"page","href":"/pages/transform-functions","text":"Функции Transform"},{"date":"2013-09-26","type":"page","href":"/pages/svojstva-animation","text":"Свойства Animation одной таблицей"},{"date":"2013-09-26","type":"page","href":"/pages/svojstva-transform","text":"Свойства Transform"},{"date":"2013-09-04","type":"page","href":"/pages/razny-j-sintaksis-flexbox","text":"Разный синтаксис Flexbox"},{"date":"2013-09-03","type":"page","href":"/pages/svojstva-flexbox","text":"Свойства Flexbox одной таблицей"}]},"__N_SSG":true}